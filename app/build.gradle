buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
    maven { name 'glide-snapshot'; url 'http://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

def versionMajor = 5
def versionMinor = 6
def versionPatch = 4

//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
//        abortOnError false
    }

    def schemaLocation = "$projectDir/schemas".toString()

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        buildConfigField "long", "BUILD_TIME", System.currentTimeMillis() + "L"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": schemaLocation]
            }
        }

        // Specifies the fully-qualified class name of the test instrumentation runner.
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        androidTest.assets.srcDirs += files(schemaLocation)
    }

    signingConfigs {
        release {
            storeFile file("../key/my-release-key.keystore")
            storePassword "***REMOVED***"
            keyAlias "alias_name"
            keyPassword "***REMOVED***"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
        debug {
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false
            jniDebuggable true
        }
    }

    flavorDimensions "market", "cycle"

    productFlavors {
        // These fields handle flavorized authorities for providers
        final FIELD_META = "PROVIDER_AUTHORITY_META"
        final FIELD_SWAP = "PROVIDER_AUTHORITY_SWAP"
        final PROVIDER_SWAP = "\"com.anthonymandra.rawdroid.SwapProvider\""
        final PROVIDER_SWAP_PRO = "\"com.anthonymandra.rawdroid.SwapProvider.pro\""
        demo {
            dimension "market"
            applicationId 'com.anthonymandra.rawdroid'
            buildConfigField "String", FIELD_SWAP, PROVIDER_SWAP
        }
        pro {
            dimension "market"
            applicationId 'com.anthonymandra.rawdroidpro'
            buildConfigField "String", FIELD_SWAP, PROVIDER_SWAP_PRO
        }
//        proAmazon {
//            dimension "market"
//            applicationId 'com.anthonymandra.rawdroidpro'
//            buildConfigField "String", FIELD_SWAP, PROVIDER_SWAP_PRO
//        }
        production {
            dimension "cycle"
        }
        beta {
            dimension "cycle"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    androidExtensions {
        experimental = true // For ViewHolder binding https://blog.jetbrains.com/kotlin/2017/08/kotlin-1-1-4-is-out/
    }
}

dependencies {
    implementation project(':showcaseView')
    implementation project(':inscription')
    implementation project(':metadata-extractor')
    implementation project(':rawprocessor')
    implementation project(':documentActivity')
    implementation project(':ssiv')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "androidx.core:core-ktx:$ktx"

    // UI
    implementation 'com.anthonymandra:ToggleButtons:3.0.1'
    implementation 'com.afollestad:material-cab:0.1.12'
    implementation 'me.zhanghai.android.materialprogressbar:library:1.4.2'
    implementation 'com.github.deano2390:MaterialShowcaseView:1.2.0'
    implementation 'com.eftimoff:android-viewpager-transformers:1.0.1@aar'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt "com.github.bumptech.glide:compiler:4.8.0"

    // Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.8'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0'

    // Material extension contains many of the necessary androidx classes
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.annotation:annotation:$annotationVersion"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //    implementation "androidx.cardview:cardview:$cardviewVersion"

    // Android architecture
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.paging:paging-runtime:$pagingVersion"
    implementation "android.arch.work:work-runtime-ktx:$workVersion"

    // Testing and Debug
    // Instrumented
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.annotation:annotation:$annotationVersion"
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test:rules:1.1.0-alpha4'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation "android.arch.work:work-testing:$workVersion"

    //    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'

    // Local
    testImplementation 'junit:junit:4.12'
    testImplementation "androidx.room:room-testing:$roomVersion"

    // Debug
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    implementation('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true
    }
    implementation('com.crashlytics.sdk.android:crashlytics-ndk:1.1.6@aar') {
        transitive = true
    }
}

crashlytics {
    enableNdk true
    androidNdkOut       '../rawprocessor/library/build/intermediates/ndkBuild/debug/obj'
    androidNdkLibsOut   '../rawprocessor/library/build/intermediates/ndkBuild/release/obj'
}