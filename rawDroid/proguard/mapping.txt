com.adobe.xmp.XMPDateTime -> com.a.a.a:
    int getYear() -> a
    void setYear(int) -> a
    int getMonth() -> b
    void setMonth(int) -> b
    int getDay() -> c
    void setDay(int) -> c
    int getHour() -> d
    void setHour(int) -> d
    int getMinute() -> e
    void setMinute(int) -> e
    int getSecond() -> f
    void setSecond(int) -> f
    int getNanoSecond() -> g
    void setNanoSecond(int) -> g
    java.util.TimeZone getTimeZone() -> h
    void setTimeZone(java.util.TimeZone) -> a
    java.util.Calendar getCalendar() -> i
com.adobe.xmp.XMPException -> com.a.a.b:
    int errorCode -> a
    int getErrorCode() -> a
com.adobe.xmp.XMPIterator -> com.a.a.c:
com.adobe.xmp.XMPMeta -> com.a.a.d:
    void setLocalizedText$62e18de4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.Calendar getPropertyCalendar(java.lang.String,java.lang.String) -> a
    java.lang.String getPropertyString(java.lang.String,java.lang.String) -> b
    com.adobe.xmp.XMPIterator iterator() -> a
com.adobe.xmp.XMPMetaFactory -> com.a.a.e:
    com.adobe.xmp.XMPSchemaRegistry schema -> a
    com.adobe.xmp.XMPVersionInfo versionInfo -> b
    com.adobe.xmp.XMPSchemaRegistry getSchemaRegistry() -> a
    com.adobe.xmp.XMPMeta parseFromBuffer(byte[]) -> a
com.adobe.xmp.XMPSchemaRegistry -> com.a.a.f:
    java.lang.String registerNamespace(java.lang.String,java.lang.String) -> a
    java.lang.String getNamespacePrefix(java.lang.String) -> a
    java.lang.String getNamespaceURI(java.lang.String) -> b
    com.adobe.xmp.properties.XMPAliasInfo findAlias(java.lang.String) -> c
com.adobe.xmp.XMPUtils -> com.a.a.g:
    boolean convertToBoolean(java.lang.String) -> a
    int convertToInteger(java.lang.String) -> b
    long convertToLong(java.lang.String) -> c
    double convertToDouble(java.lang.String) -> d
    com.adobe.xmp.XMPDateTime convertToDate(java.lang.String) -> e
    byte[] decodeBase64(java.lang.String) -> f
com.adobe.xmp.XMPVersionInfo -> com.a.a.h:
com.adobe.xmp.impl.Base64 -> com.a.a.a.a:
    byte[] base64 -> a
    byte[] ascii -> b
    byte[] decode(byte[]) -> a
com.adobe.xmp.impl.ByteBuffer -> com.a.a.a.b:
    byte[] buffer -> a
    int length -> b
    java.lang.String encoding -> c
    java.io.InputStream getByteStream() -> a
    int length() -> b
    int charAt(int) -> a
    void append(byte) -> a
    void append$1cf967a4(byte[],int) -> a
    void append(byte[]) -> a
    java.lang.String getEncoding() -> c
    void ensureCapacity(int) -> b
com.adobe.xmp.impl.FixASCIIControlsReader -> com.a.a.a.c:
    int state -> a
    int control -> b
    int digits -> c
    int read(char[],int,int) -> read
com.adobe.xmp.impl.ISO8601Converter -> com.a.a.a.d:
    com.adobe.xmp.XMPDateTime parse(java.lang.String,com.adobe.xmp.XMPDateTime) -> a
    java.lang.String render(com.adobe.xmp.XMPDateTime) -> a
com.adobe.xmp.impl.Latin1Converter -> com.a.a.a.e:
    com.adobe.xmp.impl.ByteBuffer convert(com.adobe.xmp.impl.ByteBuffer) -> a
    byte[] convertToUTF8(byte) -> a
com.adobe.xmp.impl.ParameterAsserts -> com.a.a.a.f:
    void assertPropName(java.lang.String) -> a
    void assertSchemaNS(java.lang.String) -> b
    void assertNotNull(java.lang.Object) -> a
com.adobe.xmp.impl.ParseRDF -> com.a.a.a.g:
    boolean $assertionsDisabled -> a
    com.adobe.xmp.impl.XMPMetaImpl parse(org.w3c.dom.Node) -> a
    void rdf_NodeElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> a
    void rdf_PropertyElementList(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> b
    void rdf_ResourcePropertyElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> c
    void rdf_LiteralPropertyElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> d
    void rdf_ParseTypeResourcePropertyElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> e
    void rdf_EmptyPropertyElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> f
    com.adobe.xmp.impl.XMPNode addChildNode(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,java.lang.String,boolean) -> a
    com.adobe.xmp.impl.XMPNode addQualifierNode(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String) -> a
    void fixupQualifiedNode(com.adobe.xmp.impl.XMPNode) -> a
    boolean isWhitespaceNode(org.w3c.dom.Node) -> b
    int getRDFTermKind(org.w3c.dom.Node) -> c
com.adobe.xmp.impl.ParseState -> com.a.a.a.h:
    java.lang.String str -> a
    int pos -> b
    int length() -> a
    boolean hasNext() -> b
    char ch(int) -> a
    char ch() -> c
    void skip() -> d
    int pos() -> e
    int gatherInt(java.lang.String,int) -> a
com.adobe.xmp.impl.Utils -> com.a.a.a.i:
    boolean[] xmlNameStartChars -> a
    boolean[] xmlNameChars -> b
    java.lang.String normalizeLangValue(java.lang.String) -> a
    java.lang.String[] splitNameAndValue(java.lang.String) -> b
    boolean checkUUIDFormat(java.lang.String) -> c
    boolean isXMLName(java.lang.String) -> d
    boolean isXMLNameNS(java.lang.String) -> e
    boolean isControlChar(char) -> a
    boolean isNameStartChar(char) -> b
    boolean isNameChar(char) -> c
com.adobe.xmp.impl.XMPDateTimeImpl -> com.a.a.a.j:
    int year -> a
    int month -> b
    int day -> c
    int hour -> d
    int minute -> e
    int second -> f
    java.util.TimeZone timeZone -> g
    int nanoSeconds -> h
    int getYear() -> a
    void setYear(int) -> a
    int getMonth() -> b
    void setMonth(int) -> b
    int getDay() -> c
    void setDay(int) -> c
    int getHour() -> d
    void setHour(int) -> d
    int getMinute() -> e
    void setMinute(int) -> e
    int getSecond() -> f
    void setSecond(int) -> f
    int getNanoSecond() -> g
    void setNanoSecond(int) -> g
    int compareTo(java.lang.Object) -> compareTo
    java.util.TimeZone getTimeZone() -> h
    void setTimeZone(java.util.TimeZone) -> a
    java.util.Calendar getCalendar() -> i
    java.lang.String toString() -> toString
com.adobe.xmp.impl.XMPIteratorImpl -> com.a.a.a.k:
    com.adobe.xmp.options.IteratorOptions options -> c
    java.lang.String baseNS -> d
    boolean skipSiblings -> a
    boolean skipSubtree -> b
    java.util.Iterator nodeIterator -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    com.adobe.xmp.options.IteratorOptions getOptions() -> a
    java.lang.String getBaseNS() -> b
    void setBaseNS(java.lang.String) -> a
com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator -> com.a.a.a.l:
    int state -> b
    com.adobe.xmp.impl.XMPNode visitedNode -> c
    java.lang.String path -> d
    java.util.Iterator childrenIterator -> e
    int index -> f
    java.util.Iterator subIterator -> g
    com.adobe.xmp.properties.XMPPropertyInfo returnProperty -> h
    com.adobe.xmp.impl.XMPIteratorImpl this$0 -> a
    boolean hasNext() -> hasNext
    boolean iterateChildren(java.util.Iterator) -> a
    java.lang.Object next() -> next
    void remove() -> remove
    java.lang.String accumulatePath(com.adobe.xmp.impl.XMPNode,java.lang.String,int) -> a
    com.adobe.xmp.properties.XMPPropertyInfo createPropertyInfo(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String) -> a
    com.adobe.xmp.properties.XMPPropertyInfo getReturnProperty() -> a
    void setReturnProperty(com.adobe.xmp.properties.XMPPropertyInfo) -> a
com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1 -> com.a.a.a.m:
    java.lang.String val$baseNS -> a
    java.lang.String val$path -> b
    java.lang.Object val$value -> c
    com.adobe.xmp.impl.XMPNode val$node -> d
    com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator this$1 -> e
    java.lang.String getPath() -> a
    java.lang.Object getValue() -> b
com.adobe.xmp.impl.XMPIteratorImpl$NodeIteratorChildren -> com.a.a.a.n:
    java.lang.String parentPath -> c
    java.util.Iterator childrenIterator -> d
    int index -> e
    com.adobe.xmp.impl.XMPIteratorImpl this$0 -> b
    boolean hasNext() -> hasNext
com.adobe.xmp.impl.XMPMetaImpl -> com.a.a.a.o:
    com.adobe.xmp.impl.XMPNode tree -> b
    java.lang.String packetHeader -> c
    boolean $assertionsDisabled -> a
    void setLocalizedText$62e18de4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object getPropertyObject(java.lang.String,java.lang.String,int) -> a
    java.util.Calendar getPropertyCalendar(java.lang.String,java.lang.String) -> a
    java.lang.String getPropertyString(java.lang.String,java.lang.String) -> b
    com.adobe.xmp.XMPIterator iterator() -> a
    void setPacketHeader(java.lang.String) -> a
    java.lang.Object clone() -> clone
    com.adobe.xmp.impl.XMPNode getRoot() -> b
com.adobe.xmp.impl.XMPMetaParser -> com.a.a.a.p:
    java.lang.Object XMP_RDF -> a
    javax.xml.parsers.DocumentBuilderFactory factory -> b
    com.adobe.xmp.XMPMeta parse$30448dcb(java.lang.Object) -> a
    org.w3c.dom.Document parseXmlFromInputStream(java.io.InputStream,com.adobe.xmp.options.ParseOptions) -> a
    org.w3c.dom.Document parseXmlFromBytebuffer(com.adobe.xmp.impl.ByteBuffer,com.adobe.xmp.options.ParseOptions) -> a
    org.w3c.dom.Document parseXmlFromString(java.lang.String,com.adobe.xmp.options.ParseOptions) -> a
    org.w3c.dom.Document parseInputSource(org.xml.sax.InputSource) -> a
    java.lang.Object[] findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[]) -> a
    javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory() -> a
com.adobe.xmp.impl.XMPNode -> com.a.a.a.q:
    java.lang.String name -> b
    java.lang.String value -> c
    com.adobe.xmp.impl.XMPNode parent -> d
    java.util.List children -> e
    java.util.List qualifier -> f
    com.adobe.xmp.options.PropertyOptions options -> g
    boolean implicit -> h
    boolean hasAliases -> i
    boolean alias -> j
    boolean hasValueChild -> k
    boolean $assertionsDisabled -> a
    com.adobe.xmp.impl.XMPNode getParent() -> a
    com.adobe.xmp.impl.XMPNode getChild(int) -> a
    void addChild(com.adobe.xmp.impl.XMPNode) -> a
    void addChild$effd833(com.adobe.xmp.impl.XMPNode) -> b
    void replaceChild(int,com.adobe.xmp.impl.XMPNode) -> a
    void removeChild(int) -> b
    void removeChild(com.adobe.xmp.impl.XMPNode) -> c
    void cleanupChildren() -> r
    void removeChildren() -> b
    int getChildrenLength() -> c
    com.adobe.xmp.impl.XMPNode findChildByName(java.lang.String) -> a
    com.adobe.xmp.impl.XMPNode getQualifier(int) -> c
    int getQualifierLength() -> d
    void addQualifier(com.adobe.xmp.impl.XMPNode) -> d
    void removeQualifier(com.adobe.xmp.impl.XMPNode) -> e
    void removeQualifiers() -> e
    com.adobe.xmp.impl.XMPNode findQualifierByName(java.lang.String) -> b
    boolean hasChildren() -> f
    java.util.Iterator iterateChildren() -> g
    boolean hasQualifier() -> h
    java.util.Iterator iterateQualifier() -> i
    java.lang.Object clone() -> clone
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String getName() -> j
    void setName(java.lang.String) -> c
    java.lang.String getValue() -> k
    void setValue(java.lang.String) -> d
    com.adobe.xmp.options.PropertyOptions getOptions() -> l
    void setOptions(com.adobe.xmp.options.PropertyOptions) -> a
    boolean isImplicit() -> m
    void setImplicit(boolean) -> a
    boolean getHasAliases() -> n
    void setHasAliases(boolean) -> b
    boolean isAlias() -> o
    void setAlias(boolean) -> c
    boolean getHasValueChild() -> p
    void setHasValueChild(boolean) -> d
    boolean isLanguageNode() -> s
    boolean isTypeNode() -> t
    java.util.List getChildren() -> u
    java.util.List getUnmodifiableChildren() -> q
    java.util.List getQualifier() -> v
    com.adobe.xmp.impl.XMPNode find(java.util.List,java.lang.String) -> a
    void assertChildNotExisting(java.lang.String) -> e
com.adobe.xmp.impl.XMPNode$1 -> com.a.a.a.r:
    java.util.Iterator val$it -> a
    com.adobe.xmp.impl.XMPNode this$0 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.adobe.xmp.impl.XMPNodeUtils -> com.a.a.a.s:
    boolean $assertionsDisabled -> a
    com.adobe.xmp.impl.XMPNode findSchemaNode$2a611801(com.adobe.xmp.impl.XMPNode,java.lang.String) -> a
    com.adobe.xmp.impl.XMPNode findSchemaNode(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String,boolean) -> a
    com.adobe.xmp.impl.XMPNode findChildNode(com.adobe.xmp.impl.XMPNode,java.lang.String,boolean) -> a
    com.adobe.xmp.impl.XMPNode findNode(com.adobe.xmp.impl.XMPNode,com.adobe.xmp.impl.xpath.XMPPath,boolean,com.adobe.xmp.options.PropertyOptions) -> a
    void deleteNode(com.adobe.xmp.impl.XMPNode) -> b
    com.adobe.xmp.options.PropertyOptions verifySetOptions$5d125533(com.adobe.xmp.options.PropertyOptions) -> a
    int findIndexedItem(com.adobe.xmp.impl.XMPNode,java.lang.String,boolean) -> b
    int lookupFieldSelector(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String) -> c
    int lookupQualSelector(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String,int) -> a
    void detectAltText(com.adobe.xmp.impl.XMPNode) -> a
    void appendLangItem(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String) -> a
    java.lang.Object[] chooseLocalizedText(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String) -> b
    int lookupLanguageItem(com.adobe.xmp.impl.XMPNode,java.lang.String) -> b
com.adobe.xmp.impl.XMPNormalizer -> com.a.a.a.t:
    java.util.Map dcArrayForms -> a
    com.adobe.xmp.XMPMeta process(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.options.ParseOptions) -> a
    void repairAltText(com.adobe.xmp.impl.XMPNode) -> a
    void transplantArrayItemAlias(java.util.Iterator,com.adobe.xmp.impl.XMPNode,com.adobe.xmp.impl.XMPNode) -> a
    void deleteEmptySchemas(com.adobe.xmp.impl.XMPNode) -> b
    void compareAliasedSubtrees(com.adobe.xmp.impl.XMPNode,com.adobe.xmp.impl.XMPNode,boolean) -> a
com.adobe.xmp.impl.XMPSchemaRegistryImpl -> com.a.a.a.u:
    java.util.Map namespaceToPrefixMap -> a
    java.util.Map prefixToNamespaceMap -> b
    java.util.Map aliasMap -> c
    java.util.regex.Pattern p -> d
    java.lang.String registerNamespace(java.lang.String,java.lang.String) -> a
    java.lang.String getNamespacePrefix(java.lang.String) -> a
    java.lang.String getNamespaceURI(java.lang.String) -> b
    com.adobe.xmp.properties.XMPAliasInfo findAlias(java.lang.String) -> c
    void registerAlias(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.adobe.xmp.options.AliasOptions) -> a
com.adobe.xmp.impl.XMPSchemaRegistryImpl$1 -> com.a.a.a.v:
    java.lang.String val$actualNS -> a
    java.lang.String val$actualPrefix -> b
    java.lang.String val$actualProp -> c
    com.adobe.xmp.options.AliasOptions val$aliasOpts -> d
    com.adobe.xmp.impl.XMPSchemaRegistryImpl this$0 -> e
    java.lang.String getNamespace() -> a
    java.lang.String getPrefix() -> b
    java.lang.String getPropName() -> c
    com.adobe.xmp.options.AliasOptions getAliasForm() -> d
    java.lang.String toString() -> toString
com.adobe.xmp.impl.xpath.PathPosition -> com.a.a.a.a.a:
    java.lang.String path -> a
    int nameStart -> b
    int nameEnd -> c
    int stepBegin -> d
    int stepEnd -> e
com.adobe.xmp.impl.xpath.XMPPath -> com.a.a.a.a.b:
    java.util.List segments -> a
    void add(com.adobe.xmp.impl.xpath.XMPPathSegment) -> a
    com.adobe.xmp.impl.xpath.XMPPathSegment getSegment(int) -> a
    int size() -> a
    java.lang.String toString() -> toString
com.adobe.xmp.impl.xpath.XMPPathParser -> com.a.a.a.a.c:
    com.adobe.xmp.impl.xpath.XMPPath expandXPath(java.lang.String,java.lang.String) -> a
    void verifyQualName(java.lang.String) -> a
    void verifySimpleXMLName(java.lang.String) -> b
    java.lang.String verifyXPathRoot(java.lang.String,java.lang.String) -> b
com.adobe.xmp.impl.xpath.XMPPathSegment -> com.a.a.a.a.d:
    java.lang.String name -> a
    int kind -> b
    boolean alias -> c
    int aliasForm -> d
    int getKind() -> a
    void setKind(int) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    void setAlias$1385ff() -> c
    boolean isAlias() -> d
    int getAliasForm() -> e
    void setAliasForm(int) -> b
    java.lang.String toString() -> toString
com.adobe.xmp.options.AliasOptions -> com.a.a.b.a:
    boolean isSimple() -> a
    boolean isArray() -> b
    boolean isArrayAltText() -> c
    com.adobe.xmp.options.PropertyOptions toPropertyOptions() -> d
    int getValidOptions() -> e
com.adobe.xmp.options.IteratorOptions -> com.a.a.b.b:
    boolean isJustChildren() -> a
    boolean isJustLeafname() -> b
    boolean isJustLeafnodes() -> c
    boolean isOmitQualifiers() -> d
    int getValidOptions() -> e
com.adobe.xmp.options.Options -> com.a.a.b.c:
    int options -> a
    java.util.Map optionNames -> b
    boolean getOption(int) -> a
    void setOption(int,boolean) -> a
    int getOptions() -> f
    void setOptions(int) -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getValidOptions() -> e
    void assertConsistency(int) -> c
    void assertOptionsValid(int) -> d
com.adobe.xmp.options.ParseOptions -> com.a.a.b.d:
    boolean getRequireXMPMeta() -> a
    boolean getStrictAliasing() -> b
    boolean getFixControlChars() -> c
    boolean getAcceptLatin1() -> d
    boolean getOmitNormalization() -> g
    int getValidOptions() -> e
com.adobe.xmp.options.PropertyOptions -> com.a.a.b.e:
    com.adobe.xmp.options.PropertyOptions setHasQualifiers(boolean) -> a
    boolean isQualifier() -> a
    boolean getHasLanguage() -> b
    com.adobe.xmp.options.PropertyOptions setHasLanguage(boolean) -> b
    com.adobe.xmp.options.PropertyOptions setHasType(boolean) -> c
    boolean isStruct() -> c
    com.adobe.xmp.options.PropertyOptions setStruct(boolean) -> d
    boolean isArray() -> d
    com.adobe.xmp.options.PropertyOptions setArray$27f76da() -> g
    boolean isArrayOrdered() -> h
    com.adobe.xmp.options.PropertyOptions setArrayOrdered$27f76da() -> i
    boolean isArrayAlternate() -> j
    com.adobe.xmp.options.PropertyOptions setArrayAlternate$27f76da() -> k
    boolean isArrayAltText() -> l
    com.adobe.xmp.options.PropertyOptions setArrayAltText$27f76da() -> m
    boolean isSchemaNode() -> n
    boolean isCompositeProperty() -> o
    void mergeWith(com.adobe.xmp.options.PropertyOptions) -> a
    int getValidOptions() -> e
    void assertConsistency(int) -> c
com.adobe.xmp.properties.XMPAliasInfo -> com.a.a.c.a:
    java.lang.String getNamespace() -> a
    java.lang.String getPrefix() -> b
    java.lang.String getPropName() -> c
    com.adobe.xmp.options.AliasOptions getAliasForm() -> d
com.adobe.xmp.properties.XMPPropertyInfo -> com.a.a.c.b:
    java.lang.String getPath() -> a
    java.lang.Object getValue() -> b
com.android.gallery3d.anim.Animation -> com.android.gallery3d.anim.Animation:
    long mStartTime -> a
    int mDuration -> b
    android.view.animation.Interpolator mInterpolator -> c
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    void setDuration(int) -> setDuration
    void start() -> start
    void setStartTime(long) -> setStartTime
    boolean isActive() -> isActive
    boolean calculate(long) -> calculate
    void onCalculate(float) -> onCalculate
com.android.gallery3d.anim.CanvasAnimation -> com.android.gallery3d.anim.CanvasAnimation:
    int getCanvasSaveFlags() -> getCanvasSaveFlags
    void apply(com.android.gallery3d.ui.GLCanvas) -> apply
com.android.gallery3d.app.ActivityState -> com.android.gallery3d.app.ActivityState:
    com.android.gallery3d.app.GalleryContext mContext -> mContext
    void setContentPane(com.android.gallery3d.ui.GLView) -> setContentPane
    void setContext(com.android.gallery3d.app.GalleryContext) -> a
    void onBackPressed() -> onBackPressed
    void onSaveState(android.os.Bundle) -> onSaveState
    void onCreate(android.os.Bundle,android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
com.android.gallery3d.app.GalleryContext -> com.android.gallery3d.app.GalleryContext:
    com.android.gallery3d.data.ImageService getImageService() -> getImageService
    com.android.gallery3d.app.StateManager getStateManager() -> getStateManager
    com.android.gallery3d.data.DownloadService getDownloadService() -> getDownloadService
    com.android.gallery3d.data.DecodeService getDecodeService() -> getDecodeService
    com.android.gallery3d.ui.GLRoot getGLRoot() -> getGLRoot
    com.android.gallery3d.ui.PositionRepository getPositionRepository() -> getPositionRepository
    android.content.Context getAndroidContext() -> getAndroidContext
    android.os.Looper getMainLooper() -> getMainLooper
    android.content.res.Resources getResources() -> getResources
    android.content.ContentResolver getContentResolver() -> getContentResolver
com.android.gallery3d.app.PhotoPage -> com.android.gallery3d.app.PhotoPage:
    java.lang.String TAG -> a
    java.lang.String KEY_SET_INDEX -> KEY_SET_INDEX
    java.lang.String KEY_PHOTO_INDEX -> KEY_PHOTO_INDEX
    int REQUEST_CODE_PICK_FILE_OR_DIRECTORY -> REQUEST_CODE_PICK_FILE_OR_DIRECTORY
    com.android.gallery3d.ui.SynchronizedHandler mHandler -> b
    com.android.gallery3d.ui.ImageViewer mImageViewer -> c
    com.android.gallery3d.app.PhotoPage$MyImageViewerModel mModel -> d
    com.android.gallery3d.data.MediaSet mMediaSet -> e
    com.android.gallery3d.ui.GLView mRootPane -> f
    void onCreate(android.os.Bundle,android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void nextImage() -> nextImage
    com.android.gallery3d.ui.ImageViewer access$0(com.android.gallery3d.app.PhotoPage) -> a
    com.android.gallery3d.data.MediaSet access$1(com.android.gallery3d.app.PhotoPage) -> b
    java.lang.String access$2() -> a
    com.android.gallery3d.ui.SynchronizedHandler access$3(com.android.gallery3d.app.PhotoPage) -> c
    com.android.gallery3d.app.PhotoPage$MyImageViewerModel access$4(com.android.gallery3d.app.PhotoPage) -> d
com.android.gallery3d.app.PhotoPage$1 -> com.android.gallery3d.app.a:
    com.android.gallery3d.app.PhotoPage this$0 -> a
    void renderBackground(com.android.gallery3d.ui.GLCanvas) -> renderBackground
    void onLayout(boolean,int,int,int,int) -> onLayout
com.android.gallery3d.app.PhotoPage$2 -> com.android.gallery3d.app.b:
    com.android.gallery3d.app.PhotoPage this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.android.gallery3d.app.PhotoPage$LargeImageListener -> com.android.gallery3d.app.c:
    int mIndex -> b
    com.android.gallery3d.app.PhotoPage this$0 -> a
    void onFutureDone(com.android.gallery3d.util.Future) -> onFutureDone
com.android.gallery3d.app.PhotoPage$MyImageViewerModel -> com.android.gallery3d.app.d:
    android.graphics.BitmapRegionDecoder mLargeBitmap -> b
    android.graphics.Bitmap[] mScreenNails -> c
    com.android.gallery3d.app.PhotoPage this$0 -> a
    android.graphics.BitmapRegionDecoder getLargeBitmap() -> getLargeBitmap
    boolean isRecycled() -> a
    void resetBitmaps() -> b
    com.android.gallery3d.ui.ImageViewer$ImageData getImageData(int) -> getImageData
    void next() -> next
    void previous() -> previous
    void updateScreenNail(int,android.graphics.Bitmap) -> a
    void updateLargeImage(int,android.graphics.BitmapRegionDecoder) -> a
    com.android.gallery3d.data.MediaItem getMediaItem(java.util.ArrayList,int,int) -> a
    void requestNextImageWithMeta() -> c
    void requestNextImage() -> d
com.android.gallery3d.app.PhotoPage$ScreenNailListener -> com.android.gallery3d.app.e:
    int mIndex -> b
    com.android.gallery3d.app.PhotoPage this$0 -> a
    void onFutureDone(com.android.gallery3d.util.Future) -> onFutureDone
com.android.gallery3d.app.StateManager -> com.android.gallery3d.app.StateManager:
    boolean mIsResumed -> a
    com.android.gallery3d.app.GalleryContext mContext -> b
    java.util.Stack mStack -> c
    void startState(java.lang.Class,android.os.Bundle) -> startState
    void resume() -> resume
    void pause() -> pause
    void finishState(com.android.gallery3d.app.ActivityState) -> a
    void restoreFromState(android.os.Bundle) -> restoreFromState
    void saveState(android.os.Bundle) -> saveState
    com.android.gallery3d.app.ActivityState getTopState() -> getTopState
com.android.gallery3d.app.StateManager$StateEntry -> com.android.gallery3d.app.f:
    android.os.Bundle data -> a
    com.android.gallery3d.app.ActivityState activityState -> b
com.android.gallery3d.data.DecodeService -> com.android.gallery3d.data.DecodeService:
    java.util.concurrent.Executor mExecutor -> a
    com.android.gallery3d.util.Future requestDecode(java.io.File,android.graphics.BitmapFactory$Options,com.android.gallery3d.util.FutureListener) -> requestDecode
    com.android.gallery3d.util.FutureTask requestDecode(byte[],android.graphics.BitmapFactory$Options,com.android.gallery3d.util.FutureListener) -> requestDecode
    com.android.gallery3d.util.FutureTask requestDecode(byte[],int,int,android.graphics.BitmapFactory$Options,com.android.gallery3d.util.FutureListener) -> requestDecode
    com.android.gallery3d.util.FutureTask requestDecode(java.io.File,android.graphics.BitmapFactory$Options,int,int,com.android.gallery3d.util.FutureListener) -> requestDecode
    com.android.gallery3d.util.FutureTask requestCreateLargeBitmap(byte[],int,int,com.android.gallery3d.util.FutureListener) -> requestCreateLargeBitmap
    com.android.gallery3d.util.FutureTask requestCreateLargeBitmap(java.lang.String,com.android.gallery3d.util.FutureListener) -> requestCreateLargeBitmap
com.android.gallery3d.data.DecodeService$CreateLargeBitampFromByteArray -> com.android.gallery3d.data.a:
    byte[] mBytes -> a
    int mOffset -> b
    int mLength -> c
    boolean mIsShareable -> d
    java.lang.Object call() -> call
com.android.gallery3d.data.DecodeService$CreateLargeBitampFromFilePath -> com.android.gallery3d.data.b:
    java.lang.String mFilePath -> a
    boolean mIsShareable -> b
    java.lang.Object call() -> call
com.android.gallery3d.data.DecodeService$DecodeAndSampleFile -> com.android.gallery3d.data.c:
    int mTargetLength -> a
    int mMaxPixelCount -> b
    java.io.File mFile -> c
    android.graphics.BitmapFactory$Options mOptions -> d
    android.graphics.Bitmap call() -> a
    java.lang.Object call() -> call
com.android.gallery3d.data.DecodeService$DecodeByteArray -> com.android.gallery3d.data.d:
    byte[] mBytes -> a
    android.graphics.BitmapFactory$Options mOptions -> b
    int mOffset -> c
    int mLength -> d
    java.lang.Object call() -> call
com.android.gallery3d.data.DecodeService$DecodeFile -> com.android.gallery3d.data.e:
    java.io.File mFile -> a
    android.graphics.BitmapFactory$Options mOptions -> b
    java.lang.Object call() -> call
com.android.gallery3d.data.DecodeService$DecodeFutureTask -> com.android.gallery3d.data.f:
    android.graphics.BitmapFactory$Options mOptions -> a
    void cancelTask() -> cancelTask
com.android.gallery3d.data.DownloadService -> com.android.gallery3d.data.DownloadService:
    java.util.concurrent.ThreadPoolExecutor mExecutor -> a
    com.android.gallery3d.util.FutureTask requestDownload(java.net.URL,java.io.File,com.android.gallery3d.util.FutureListener) -> requestDownload
    com.android.gallery3d.util.FutureTask requestDownload(java.net.URL,com.android.gallery3d.util.FutureListener) -> requestDownload
    void access$0(java.net.URL,java.io.OutputStream) -> a
com.android.gallery3d.data.DownloadService$DownloadToByteArray -> com.android.gallery3d.data.g:
    java.net.URL mUrl -> a
    byte[] call() -> a
    java.lang.Object call() -> call
com.android.gallery3d.data.DownloadService$DownloadToFile -> com.android.gallery3d.data.h:
    java.net.URL mUrl -> a
    java.io.File mFile -> b
    java.lang.Void call() -> a
    java.lang.Object call() -> call
com.android.gallery3d.data.ImageService -> com.android.gallery3d.data.ImageService:
    java.util.concurrent.Executor mExecutor -> a
    android.content.ContentResolver mContentResolver -> b
    com.android.gallery3d.util.Future requestImageThumbnail(int,int,com.android.gallery3d.util.FutureListener) -> requestImageThumbnail
    com.android.gallery3d.util.Future requestImageThumbnail(java.lang.String,int,com.android.gallery3d.util.FutureListener) -> requestImageThumbnail
    com.android.gallery3d.util.Future requestVideoThumbnail(int,int,com.android.gallery3d.util.FutureListener) -> requestVideoThumbnail
com.android.gallery3d.data.ImageService$GetImageThumbnail -> com.android.gallery3d.data.i:
    int STATE_READY -> a
    int STATE_RUNNING -> b
    int STATE_CANCELED -> c
    int STATE_RAN -> d
    java.util.concurrent.atomic.AtomicInteger mState -> e
    int mId -> f
    int mType -> g
    android.content.ContentResolver mResolver -> h
    void run() -> run
    void onCancel() -> onCancel
com.android.gallery3d.data.ImageService$GetLocalImageThumbnail -> com.android.gallery3d.data.j:
    int STATE_READY -> a
    int STATE_RUNNING -> b
    int STATE_CANCELED -> c
    int STATE_RAN -> d
    java.util.concurrent.atomic.AtomicInteger mState -> e
    int mType -> f
    java.lang.String mFile -> g
    void run() -> run
    void onCancel() -> onCancel
com.android.gallery3d.data.ImageService$GetVideoThumbnail -> com.android.gallery3d.data.k:
    int STATE_READY -> a
    int STATE_RUNNING -> b
    int STATE_CANCELED -> c
    int STATE_RAN -> d
    java.util.concurrent.atomic.AtomicInteger mState -> e
    int mId -> f
    int mType -> g
    android.content.ContentResolver mResolver -> h
    void run() -> run
    void onCancel() -> onCancel
com.android.gallery3d.data.ImageService$MyThreadFactory -> com.android.gallery3d.data.l:
    com.android.gallery3d.data.ImageService this$0 -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.android.gallery3d.data.ImageService$MyThreadFactory$1 -> com.android.gallery3d.data.m:
    com.android.gallery3d.data.ImageService$MyThreadFactory this$1 -> a
    java.lang.Runnable val$r -> b
    void run() -> run
com.android.gallery3d.data.LocalImage -> com.android.gallery3d.data.LocalImage:
    java.lang.String[] PROJECTION -> a
    android.graphics.BitmapFactory$Options mOptions -> b
    long mUniqueId -> c
    int mRotation -> d
    com.android.gallery3d.app.GalleryContext mContext -> e
    long getUniqueId() -> getUniqueId
    com.android.gallery3d.util.Future requestImage(int,com.android.gallery3d.util.FutureListener) -> requestImage
    com.android.gallery3d.data.LocalImage load(int,com.android.gallery3d.app.GalleryContext,android.database.Cursor) -> load
    com.android.gallery3d.data.LocalImage load(com.android.gallery3d.app.GalleryContext,java.lang.String) -> load
    com.android.gallery3d.util.Future requestLargeImage(int,com.android.gallery3d.util.FutureListener) -> requestLargeImage
com.android.gallery3d.data.LocalMediaItem -> com.android.gallery3d.data.LocalMediaItem:
    int mId -> mId
    java.lang.String mCaption -> mCaption
    java.lang.String mMimeType -> mMimeType
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    long mDateTakenInMs -> mDateTakenInMs
    long mDateAddedInSec -> mDateAddedInSec
    long mDateModifiedInSec -> mDateModifiedInSec
    java.lang.String mFilePath -> mFilePath
com.android.gallery3d.data.MediaItem -> com.android.gallery3d.data.MediaItem:
    int TYPE_COUNT -> TYPE_COUNT
    int TYPE_FULL_IMAGE -> TYPE_FULL_IMAGE
    int TYPE_THUMBNAIL -> TYPE_THUMBNAIL
    int TYPE_MICROTHUMBNAIL -> TYPE_MICROTHUMBNAIL
    int IMAGE_READY -> IMAGE_READY
    int IMAGE_WAIT -> IMAGE_WAIT
    int IMAGE_ERROR -> IMAGE_ERROR
    long getUniqueId() -> getUniqueId
    com.android.gallery3d.util.Future requestImage(int,com.android.gallery3d.util.FutureListener) -> requestImage
    com.android.gallery3d.util.Future requestLargeImage(int,com.android.gallery3d.util.FutureListener) -> requestLargeImage
com.android.gallery3d.data.MediaSet -> com.android.gallery3d.data.MediaSet:
    int SUPPORT_DELETE -> SUPPORT_DELETE
    int SUPPORT_ROTATE -> SUPPORT_ROTATE
    com.android.gallery3d.data.MediaSet$MediaSetListener mListener -> mListener
    int getMediaItemCount() -> getMediaItemCount
    java.util.ArrayList getMediaItem(int,int) -> getMediaItem
    int getSubMediaSetCount() -> getSubMediaSetCount
    com.android.gallery3d.data.MediaSet getSubMediaSet(int) -> getSubMediaSet
    int getTotalMediaItemCount() -> getTotalMediaItemCount
    long getUniqueId() -> getUniqueId
    java.lang.String getName() -> getName
    void setContentListener(com.android.gallery3d.data.MediaSet$MediaSetListener) -> setContentListener
    boolean reload() -> reload
    int getSupportedOperations(long) -> getSupportedOperations
    void delete(long) -> delete
    void rotate(long,int) -> rotate
    int getMergeId() -> getMergeId
com.android.gallery3d.data.MediaSet$MediaSetListener -> com.android.gallery3d.data.MediaSet$MediaSetListener:
    void onContentDirty() -> onContentDirty
com.android.gallery3d.data.RawImageSet -> com.android.gallery3d.data.RawImageSet:
    com.android.gallery3d.app.GalleryContext mContext -> a
    boolean mIsImage -> b
    java.util.List mSourceFiles -> c
    java.util.ArrayList getMediaItem(int,int) -> getMediaItem
    int getTotalMediaItemCount() -> getTotalMediaItemCount
    long getUniqueId() -> getUniqueId
    java.lang.String getName() -> getName
    boolean reload() -> reload
com.android.gallery3d.ui.BasicTexture -> com.android.gallery3d.ui.a:
    int UNSPECIFIED -> UNSPECIFIED
    int STATE_UNLOADED -> STATE_UNLOADED
    int STATE_LOADED -> STATE_LOADED
    int STATE_ERROR -> STATE_ERROR
    int mId -> mId
    int mState -> mState
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mTextureWidth -> a
    int mTextureHeight -> b
    java.lang.ref.WeakReference mCanvasRef -> mCanvasRef
    java.util.WeakHashMap sAllTextures -> c
    java.lang.ThreadLocal sInFinalizer -> d
    void setAssociatedCanvas(com.android.gallery3d.ui.GLCanvas) -> setAssociatedCanvas
    void setSize(int,int) -> setSize
    int getId() -> getId
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getTextureWidth() -> getTextureWidth
    int getTextureHeight() -> getTextureHeight
    void draw(com.android.gallery3d.ui.GLCanvas,int,int) -> draw
    void draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int) -> draw
    boolean onBind(com.android.gallery3d.ui.GLCanvas) -> onBind
    boolean isLoaded(com.android.gallery3d.ui.GLCanvas) -> isLoaded
    void recycle() -> recycle
    void yield() -> yield
    void freeResource() -> a
    void finalize() -> finalize
    boolean inFinalizer() -> inFinalizer
    void yieldAllTextures() -> yieldAllTextures
com.android.gallery3d.ui.BitmapTexture -> com.android.gallery3d.ui.BitmapTexture:
    android.graphics.Bitmap mContentBitmap -> mContentBitmap
    void onFreeBitmap(android.graphics.Bitmap) -> onFreeBitmap
    android.graphics.Bitmap onGetBitmap() -> onGetBitmap
    android.graphics.Bitmap getBitmap() -> getBitmap
    void setOpaque(boolean) -> setOpaque
    int getId() -> getId
    void recycle() -> recycle
    boolean isContentValid(com.android.gallery3d.ui.GLCanvas) -> isContentValid
    boolean isOpaque() -> isOpaque
    void updateContent(com.android.gallery3d.ui.GLCanvas) -> updateContent
    int getHeight() -> getHeight
    int getTextureHeight() -> getTextureHeight
    int getTextureWidth() -> getTextureWidth
    int getWidth() -> getWidth
    void yield() -> yield
    void draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int) -> draw
    void draw(com.android.gallery3d.ui.GLCanvas,int,int) -> draw
    boolean isLoaded(com.android.gallery3d.ui.GLCanvas) -> isLoaded
com.android.gallery3d.ui.DownUpDetector -> com.android.gallery3d.ui.DownUpDetector:
    boolean mStillDown -> a
    com.android.gallery3d.ui.DownUpDetector$DownUpListener mListener -> b
    void setState(boolean,android.view.MotionEvent) -> a
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isDown() -> isDown
com.android.gallery3d.ui.DownUpDetector$DownUpListener -> com.android.gallery3d.ui.DownUpDetector$DownUpListener:
    void onDown(android.view.MotionEvent) -> onDown
    void onUp(android.view.MotionEvent) -> onUp
com.android.gallery3d.ui.GLCanvas -> com.android.gallery3d.ui.GLCanvas:
    int SAVE_FLAG_ALL -> SAVE_FLAG_ALL
    int SAVE_FLAG_CLIP -> SAVE_FLAG_CLIP
    int SAVE_FLAG_ALPHA -> SAVE_FLAG_ALPHA
    int SAVE_FLAG_MATRIX -> SAVE_FLAG_MATRIX
    void setSize(int,int) -> setSize
    void clearBuffer() -> clearBuffer
    void setCurrentAnimationTimeMillis(long) -> setCurrentAnimationTimeMillis
    long currentAnimationTimeMillis() -> currentAnimationTimeMillis
    void setAlpha(float) -> setAlpha
    float getAlpha() -> getAlpha
    void multiplyAlpha(float) -> multiplyAlpha
    void translate(float,float,float) -> translate
    void scale(float,float,float) -> scale
    void rotate(float,float,float,float) -> rotate
    boolean clipRect(int,int,int,int) -> clipRect
    int save() -> save
    int save(int) -> save
    void restore() -> restore
    void drawLine(int,int,int,int,int) -> drawLine
    void fillRect(float,float,float,float,int) -> fillRect
    void drawTexture(com.android.gallery3d.ui.BasicTexture,int,int,int,int) -> drawTexture
    void drawMesh(com.android.gallery3d.ui.BasicTexture,int,int,int,int,int,int) -> drawMesh
    void drawTexture(com.android.gallery3d.ui.BasicTexture,int,int,int,int,float) -> drawTexture
    void drawTexture(com.android.gallery3d.ui.BasicTexture,android.graphics.RectF,android.graphics.RectF) -> drawTexture
    void drawMixed(com.android.gallery3d.ui.BasicTexture,com.android.gallery3d.ui.BasicTexture,float,int,int,int,int) -> drawMixed
    com.android.gallery3d.ui.BasicTexture copyTexture(int,int,int,int) -> copyTexture
    javax.microedition.khronos.opengles.GL11 getGLInstance() -> getGLInstance
    boolean unloadTexture(com.android.gallery3d.ui.BasicTexture) -> unloadTexture
    void deleteBuffer(int) -> deleteBuffer
    void deleteRecycledResources() -> deleteRecycledResources
com.android.gallery3d.ui.GLCanvasImp -> com.android.gallery3d.ui.GLCanvasImp:
    float[] BOX_COORDINATES -> f
    javax.microedition.khronos.opengles.GL11 mGL -> g
    float[] mMatrixValues -> h
    float[] mTextureMatrixValues -> i
    float[] mMapPointsBuffer -> j
    float[] mTextureColor -> k
    int mBoxCoords -> l
    com.android.gallery3d.ui.GLCanvasImp$GLState mGLState -> m
    long mAnimationTime -> n
    float mAlpha -> o
    android.graphics.Rect mClipRect -> p
    java.util.Stack mRestoreStack -> q
    com.android.gallery3d.ui.GLCanvasImp$ConfigState mRecycledRestoreAction -> r
    android.graphics.RectF mDrawTextureSourceRect -> s
    android.graphics.RectF mDrawTextureTargetRect -> t
    float[] mTempMatrix -> u
    com.android.gallery3d.util.IntArray mUnboundTextures -> v
    com.android.gallery3d.util.IntArray mDeleteBuffers -> w
    int mCountDrawLine -> a
    int mCountFillRect -> b
    int mCountDrawMesh -> c
    int mCountTextureRect -> d
    int mCountTextureOES -> e
    void setSize(int,int) -> setSize
    long currentAnimationTimeMillis() -> currentAnimationTimeMillis
    void setAlpha(float) -> setAlpha
    void multiplyAlpha(float) -> multiplyAlpha
    float getAlpha() -> getAlpha
    void drawLine(int,int,int,int,int) -> drawLine
    void fillRect(float,float,float,float,int) -> fillRect
    void translate(float,float,float) -> translate
    void scale(float,float,float) -> scale
    void rotate(float,float,float,float) -> rotate
    void textureRect(float,float,float,float) -> a
    void drawMesh(com.android.gallery3d.ui.BasicTexture,int,int,int,int,int,int) -> drawMesh
    float[] mapPoints(float[],int,int,int,int) -> a
    boolean clipRect(int,int,int,int) -> clipRect
    void drawBoundTexture(com.android.gallery3d.ui.BasicTexture,int,int,int,int) -> a
    void drawTexture(com.android.gallery3d.ui.BasicTexture,int,int,int,int) -> drawTexture
    void drawTexture(com.android.gallery3d.ui.BasicTexture,int,int,int,int,float) -> drawTexture
    void drawTexture(com.android.gallery3d.ui.BasicTexture,android.graphics.RectF,android.graphics.RectF) -> drawTexture
    void drawMixed(com.android.gallery3d.ui.BasicTexture,com.android.gallery3d.ui.BasicTexture,float,int,int,int,int) -> drawMixed
    boolean bindTexture(com.android.gallery3d.ui.BasicTexture) -> a
    boolean isMatrixRotatedOrFlipped(float[]) -> a
    com.android.gallery3d.ui.BasicTexture copyTexture(int,int,int,int) -> copyTexture
    javax.microedition.khronos.opengles.GL11 getGLInstance() -> getGLInstance
    void setCurrentAnimationTimeMillis(long) -> setCurrentAnimationTimeMillis
    void clearBuffer() -> clearBuffer
    void setTextureCoords(float,float,float,float) -> b
    boolean unloadTexture(com.android.gallery3d.ui.BasicTexture) -> unloadTexture
    void deleteBuffer(int) -> deleteBuffer
    void deleteRecycledResources() -> deleteRecycledResources
    int save() -> save
    int save(int) -> save
    void restore() -> restore
    void dumpStatisticsAndClear() -> dumpStatisticsAndClear
    void saveTransform() -> a
    void restoreTransform() -> b
com.android.gallery3d.ui.GLCanvasImp$ConfigState -> com.android.gallery3d.ui.b:
    float mAlpha -> a
    android.graphics.Rect mRect -> b
    float[] mMatrix -> c
    com.android.gallery3d.ui.GLCanvasImp$ConfigState mNextFree -> d
com.android.gallery3d.ui.GLCanvasImp$GLState -> com.android.gallery3d.ui.c:
    javax.microedition.khronos.opengles.GL11 mGL -> a
    int mTexEnvMode -> b
    float mTextureAlpha -> c
    boolean mTexture2DEnabled -> d
    boolean mBlendEnabled -> e
    void setTexEnvMode(int) -> a
    void setTextureAlpha(float) -> a
    void setColorMode(int,float) -> a
    void setTexture2DEnabled(boolean) -> a
    void setBlendEnabled(boolean) -> b
com.android.gallery3d.ui.GLRoot -> com.android.gallery3d.ui.GLRoot:
    void addOnGLIdleListener(com.android.gallery3d.ui.GLRoot$OnGLIdleListener) -> addOnGLIdleListener
    void registerLaunchedAnimation(com.android.gallery3d.anim.CanvasAnimation) -> registerLaunchedAnimation
    void requestRender() -> requestRender
    void requestLayoutContentPane() -> requestLayoutContentPane
    boolean hasStencil() -> hasStencil
    void lockRenderThread() -> lockRenderThread
    void unlockRenderThread() -> unlockRenderThread
    void setContentPane(com.android.gallery3d.ui.GLView) -> setContentPane
com.android.gallery3d.ui.GLRoot$OnGLIdleListener -> com.android.gallery3d.ui.GLRoot$OnGLIdleListener:
    boolean onGLIdle(com.android.gallery3d.ui.GLRoot,com.android.gallery3d.ui.GLCanvas) -> onGLIdle
com.android.gallery3d.ui.GLRootView -> com.android.gallery3d.ui.GLRootView:
    boolean DEBUG_FPS -> a
    int mFrameCount -> b
    long mFrameCountingStart -> c
    boolean DEBUG_INVALIDATE -> d
    int mInvalidateColor -> e
    boolean DEBUG_DRAWING_STAT -> f
    javax.microedition.khronos.opengles.GL11 mGL -> g
    com.android.gallery3d.ui.GLCanvasImp mCanvas -> h
    com.android.gallery3d.ui.GLView mContentView -> i
    android.util.DisplayMetrics mDisplayMetrics -> j
    int mFlags -> k
    boolean mRenderRequested -> l
    android.graphics.Rect mClipRect -> m
    int mClipRetryCount -> n
    com.android.gallery3d.ui.GalleryEGLConfigChooser mEglConfigChooser -> o
    java.util.ArrayList mAnimations -> p
    java.util.LinkedList mIdleListeners -> q
    com.android.gallery3d.ui.GLRootView$IdleRunner mIdleRunner -> r
    java.util.concurrent.locks.ReentrantLock mRenderLock -> s
    long mLastDrawFinishTime -> t
    com.android.gallery3d.ui.GalleryEGLConfigChooser getEGLConfigChooser() -> getEGLConfigChooser
    boolean hasStencil() -> hasStencil
    void registerLaunchedAnimation(com.android.gallery3d.anim.CanvasAnimation) -> registerLaunchedAnimation
    void addOnGLIdleListener(com.android.gallery3d.ui.GLRoot$OnGLIdleListener) -> addOnGLIdleListener
    void setContentPane(com.android.gallery3d.ui.GLView) -> setContentPane
    com.android.gallery3d.ui.GLView getContentPane() -> getContentPane
    void requestRender() -> requestRender
    void requestLayoutContentPane() -> requestLayoutContentPane
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    com.android.gallery3d.ui.GLCanvas getCanvas() -> getCanvas
    void lockRenderThread() -> lockRenderThread
    void unlockRenderThread() -> unlockRenderThread
    boolean access$0(com.android.gallery3d.ui.GLRootView) -> a
    java.util.LinkedList access$1(com.android.gallery3d.ui.GLRootView) -> b
    com.android.gallery3d.ui.GLCanvasImp access$2(com.android.gallery3d.ui.GLRootView) -> c
    java.util.concurrent.locks.ReentrantLock access$3(com.android.gallery3d.ui.GLRootView) -> d
com.android.gallery3d.ui.GLRootView$IdleRunner -> com.android.gallery3d.ui.d:
    boolean mActive -> a
    com.android.gallery3d.ui.GLRootView this$0 -> b
    void run() -> run
com.android.gallery3d.ui.GLView -> com.android.gallery3d.ui.GLView:
    int VISIBLE -> VISIBLE
    int INVISIBLE -> INVISIBLE
    android.graphics.Rect mBounds -> mBounds
    android.graphics.Rect mPaddings -> mPaddings
    com.android.gallery3d.ui.GLRoot mRoot -> a
    com.android.gallery3d.ui.GLView mParent -> mParent
    java.util.ArrayList mComponents -> b
    com.android.gallery3d.ui.GLView mMotionTarget -> c
    com.android.gallery3d.anim.CanvasAnimation mAnimation -> d
    int mViewFlags -> e
    int mMeasuredWidth -> mMeasuredWidth
    int mMeasuredHeight -> mMeasuredHeight
    int mLastWidthSpec -> f
    int mLastHeightSpec -> g
    int mScrollY -> mScrollY
    int mScrollX -> mScrollX
    int mScrollHeight -> mScrollHeight
    int mScrollWidth -> mScrollWidth
    void startAnimation(com.android.gallery3d.anim.CanvasAnimation) -> startAnimation
    void setVisibility(int) -> setVisibility
    int getVisibility() -> getVisibility
    void attachToRoot(com.android.gallery3d.ui.GLRoot) -> attachToRoot
    void detachFromRoot() -> detachFromRoot
    int getComponentCount() -> getComponentCount
    com.android.gallery3d.ui.GLView getComponent(int) -> getComponent
    void addComponent(com.android.gallery3d.ui.GLView) -> addComponent
    boolean removeComponent(com.android.gallery3d.ui.GLView) -> removeComponent
    void removeAllComponents() -> removeAllComponents
    void removeOneComponent(com.android.gallery3d.ui.GLView) -> a
    android.graphics.Rect bounds() -> bounds
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.android.gallery3d.ui.GLRoot getGLRoot() -> getGLRoot
    void invalidate() -> invalidate
    void requestLayout() -> requestLayout
    void render(com.android.gallery3d.ui.GLCanvas) -> render
    void renderBackground(com.android.gallery3d.ui.GLCanvas) -> renderBackground
    void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView) -> renderChild
    boolean onTouch(android.view.MotionEvent) -> onTouch
    boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean) -> dispatchTouchEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.graphics.Rect getPaddings() -> getPaddings
    void setPaddings(android.graphics.Rect) -> setPaddings
    void setPaddings(int,int,int,int) -> setPaddings
    void layout(int,int,int,int) -> layout
    void measure(int,int) -> measure
    void onMeasure(int,int) -> onMeasure
    void setMeasuredSize(int,int) -> setMeasuredSize
    int getMeasuredWidth() -> getMeasuredWidth
    int getMeasuredHeight() -> getMeasuredHeight
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean getBoundsOf(com.android.gallery3d.ui.GLView,android.graphics.Rect) -> getBoundsOf
    void onVisibilityChanged(int) -> onVisibilityChanged
    void onAttachToRoot(com.android.gallery3d.ui.GLRoot) -> onAttachToRoot
    void onDetachFromRoot() -> onDetachFromRoot
    void lockRendering() -> lockRendering
    void unlockRendering() -> unlockRendering
com.android.gallery3d.ui.GalleryEGLConfigChooser -> com.android.gallery3d.ui.e:
    int mStencilBits -> a
    int[] mConfigSpec -> b
    int[] ATTR_ID -> c
    java.lang.String[] ATTR_NAME -> d
    int getStencilBits() -> a
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    void logConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
com.android.gallery3d.ui.ImageViewer -> com.android.gallery3d.ui.ImageViewer:
    int SIZE_UNKNOWN -> SIZE_UNKNOWN
    com.android.gallery3d.ui.ImageViewer$ScreenNailEntry[] mScreenNails -> b
    android.graphics.BitmapRegionDecoder mLargeBitmap -> c
    int mLevelCount -> d
    int mLevel -> e
    int mOffsetX -> f
    int mOffsetY -> g
    int mUploadQuota -> h
    boolean mRenderComplete -> i
    android.graphics.RectF mSourceRect -> j
    android.graphics.RectF mTargetRect -> k
    android.view.ScaleGestureDetector mScaleDetector -> l
    android.view.GestureDetector mGestureDetector -> m
    com.android.gallery3d.ui.DownUpDetector mDownUpDetector -> n
    java.util.HashMap mActiveTiles -> o
    java.util.Iterator mUploadIter -> p
    com.android.gallery3d.ui.ImageViewer$Tile mRecycledHead -> q
    int mImageWidth -> r
    int mImageHeight -> s
    int mCenterX -> t
    int mCenterY -> u
    float mScale -> v
    android.graphics.Rect mTileRange -> w
    android.graphics.Rect[] mActiveRange -> x
    com.android.gallery3d.ui.ImageViewer$Uploader mUploader -> y
    com.android.gallery3d.ui.ImageViewer$AnimationController mAnimationController -> z
    com.android.gallery3d.ui.ImageViewer$Model mModel -> A
    int mSwitchIndex -> B
    boolean isTextureFreed -> C
    boolean mInTransition -> a
    void setModel(com.android.gallery3d.ui.ImageViewer$Model) -> setModel
    void resetImages() -> a
    void notifyLargeBitmapInvalidated() -> notifyLargeBitmapInvalidated
    int calcuateLevelCount(int,int,int) -> calcuateLevelCount
    void notifyScreenNailInvalidated(int) -> notifyScreenNailInvalidated
    void resetCurrentImagePosition() -> b
    boolean onTouch(android.view.MotionEvent) -> onTouch
    int ceilLog2(float) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    int gapToSide(int,int,float) -> b
    void layoutScreenNails(int,int,float) -> c
    void layoutTiles(int,int,float) -> d
    void getRange(android.graphics.Rect,int,int,int,float) -> a
    void setPosition(int,int,float) -> setPosition
    void freeTextures() -> freeTextures
    void prepareTextures() -> prepareTextures
    void render(com.android.gallery3d.ui.GLCanvas) -> render
    void recycleTile(com.android.gallery3d.ui.ImageViewer$Tile) -> a
    com.android.gallery3d.ui.ImageViewer$Tile getTile(int,int,int) -> a
    java.lang.Long makeTileKey(int,int,int) -> makeTileKey
    boolean drawTile(com.android.gallery3d.ui.ImageViewer$Tile,com.android.gallery3d.ui.GLCanvas,android.graphics.RectF,android.graphics.RectF) -> a
    void access$0(com.android.gallery3d.ui.ImageViewer) -> a
    boolean access$1(com.android.gallery3d.ui.ImageViewer) -> b
    java.util.Iterator access$2(com.android.gallery3d.ui.ImageViewer) -> c
    android.graphics.BitmapRegionDecoder access$3(com.android.gallery3d.ui.ImageViewer) -> d
    android.graphics.RectF access$4(com.android.gallery3d.ui.ImageViewer) -> e
    android.graphics.RectF access$5(com.android.gallery3d.ui.ImageViewer) -> f
    int access$6(com.android.gallery3d.ui.ImageViewer) -> g
    com.android.gallery3d.ui.ImageViewer$Tile access$7(com.android.gallery3d.ui.ImageViewer,int,int,int) -> a
    int access$8(com.android.gallery3d.ui.ImageViewer) -> h
    void access$9(com.android.gallery3d.ui.ImageViewer,int) -> a
    void access$10$22003304(com.android.gallery3d.ui.ImageViewer) -> i
    com.android.gallery3d.ui.ImageViewer$ScreenNailEntry[] access$11(com.android.gallery3d.ui.ImageViewer) -> j
    int access$12(com.android.gallery3d.ui.ImageViewer) -> k
    int access$13(com.android.gallery3d.ui.ImageViewer) -> l
    com.android.gallery3d.ui.ImageViewer$AnimationController access$14(com.android.gallery3d.ui.ImageViewer) -> m
    float access$15(com.android.gallery3d.ui.ImageViewer) -> n
    int access$16(int,int,float) -> a
    int access$17(com.android.gallery3d.ui.ImageViewer) -> o
    void access$18(com.android.gallery3d.ui.ImageViewer,int) -> b
com.android.gallery3d.ui.ImageViewer$AnimationController -> com.android.gallery3d.ui.f:
    long mAnimationStartTime -> a
    int mAnimationKind -> b
    com.android.gallery3d.ui.ImageViewer mViewer -> c
    int mImageW -> d
    int mImageH -> e
    int mViewW -> f
    int mViewH -> g
    int mCurrentX -> h
    int mFromX -> i
    int mToX -> j
    int mCurrentY -> k
    int mFromY -> l
    int mToY -> m
    float mCurrentScale -> n
    float mFromScale -> o
    float mToScale -> p
    float mPrevOffsetX -> q
    float mPrevOffsetY -> r
    boolean mInScale -> s
    float mScaleMin -> t
    float mScaleMax -> u
    void onNewImage(int,int) -> a
    void updateViewSize(int,int) -> b
    void scrollBy(float,float) -> a
    void beginScale(float,float) -> b
    void scaleBy(float,float,float) -> a
    void endScale() -> a
    void up() -> b
    void startSwitchTransition(int) -> a
    void startAnimation(int,int,float,int) -> a
    boolean advanceAnimation() -> c
    boolean startSnapbackIfNeeded() -> d
    int getTargetX() -> e
    int getTargetY() -> f
com.android.gallery3d.ui.ImageViewer$ImageData -> com.android.gallery3d.ui.ImageViewer$ImageData:
    int fullWidth -> fullWidth
    int fullHeight -> fullHeight
    android.graphics.Bitmap screenNail -> screenNail
com.android.gallery3d.ui.ImageViewer$Model -> com.android.gallery3d.ui.ImageViewer$Model:
    int INDEX_CURRENT -> INDEX_CURRENT
    int INDEX_PREVIOUS -> INDEX_PREVIOUS
    int INDEX_NEXT -> INDEX_NEXT
    void next() -> next
    void previous() -> previous
    com.android.gallery3d.ui.ImageViewer$ImageData getImageData(int) -> getImageData
    android.graphics.BitmapRegionDecoder getLargeBitmap() -> getLargeBitmap
com.android.gallery3d.ui.ImageViewer$MyDownUpListener -> com.android.gallery3d.ui.g:
    com.android.gallery3d.ui.ImageViewer this$0 -> a
    void onDown(android.view.MotionEvent) -> onDown
    void onUp(android.view.MotionEvent) -> onUp
com.android.gallery3d.ui.ImageViewer$MyGestureListener -> com.android.gallery3d.ui.h:
    com.android.gallery3d.ui.ImageViewer this$0 -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
com.android.gallery3d.ui.ImageViewer$MyScaleListener -> com.android.gallery3d.ui.i:
    com.android.gallery3d.ui.ImageViewer this$0 -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.android.gallery3d.ui.ImageViewer$ScreenNailEntry -> com.android.gallery3d.ui.j:
    int mWidth -> a
    int mHeight -> b
    android.graphics.Bitmap mBitmap -> c
    boolean mVisible -> d
    int mX -> e
    int mY -> f
    int mDrawWidth -> g
    int mDrawHeight -> h
    com.android.gallery3d.ui.BitmapTexture mTexture -> i
    void set(int,int,android.graphics.Bitmap) -> a
    void draw(com.android.gallery3d.ui.GLCanvas) -> a
    com.android.gallery3d.ui.BitmapTexture access$0(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry) -> a
    android.graphics.Bitmap access$1(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry) -> b
    int access$2(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry) -> c
    int access$3(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry) -> d
    boolean access$5(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry) -> e
    int access$6(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry) -> f
    int access$7(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry) -> g
    void access$8(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry,boolean) -> a
    void access$9(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry,int) -> a
    void access$10(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry,int) -> b
    void access$11(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry,int) -> c
    int access$12(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry) -> h
    void access$13(com.android.gallery3d.ui.ImageViewer$ScreenNailEntry,int) -> d
com.android.gallery3d.ui.ImageViewer$Tile -> com.android.gallery3d.ui.k:
    int mX -> a
    int mY -> b
    int mTileLevel -> c
    com.android.gallery3d.ui.ImageViewer$Tile mNextFree -> d
    com.android.gallery3d.ui.ImageViewer this$0 -> e
    void onFreeBitmap(android.graphics.Bitmap) -> onFreeBitmap
    android.graphics.Bitmap onGetBitmap() -> onGetBitmap
    void update(int,int,int) -> a
    void drawTile(com.android.gallery3d.ui.GLCanvas,float,float,float) -> a
    com.android.gallery3d.ui.ImageViewer$Tile getParentTile() -> a
com.android.gallery3d.ui.ImageViewer$Uploader -> com.android.gallery3d.ui.l:
    boolean mActive -> a
    com.android.gallery3d.ui.ImageViewer this$0 -> b
    boolean onGLIdle(com.android.gallery3d.ui.GLRoot,com.android.gallery3d.ui.GLCanvas) -> onGLIdle
com.android.gallery3d.ui.PositionRepository -> com.android.gallery3d.ui.PositionRepository:
    java.util.HashMap mData -> a
    float mOffsetX -> b
    float mOffsetY -> c
    float mOffsetZ -> d
    com.android.gallery3d.ui.PositionRepository$Position get(java.lang.Long) -> get
    void setPositionOffset(int,int,int) -> setPositionOffset
    void putPosition(java.lang.Long,com.android.gallery3d.ui.PositionRepository$Position) -> putPosition
    void clear() -> clear
    float access$0(float,float,float) -> a
    float access$1(float,float,float) -> b
com.android.gallery3d.ui.PositionRepository$Position -> com.android.gallery3d.ui.PositionRepository$Position:
    float x -> x
    float y -> y
    float z -> z
    float theta -> theta
    float alpha -> alpha
    com.android.gallery3d.ui.PositionRepository$Position clone() -> clone
    void set(com.android.gallery3d.ui.PositionRepository$Position) -> set
    void set(float,float,float,float,float) -> set
    boolean equals(java.lang.Object) -> equals
    void interpolate(com.android.gallery3d.ui.PositionRepository$Position,com.android.gallery3d.ui.PositionRepository$Position,com.android.gallery3d.ui.PositionRepository$Position,float) -> interpolate
    java.lang.Object clone() -> clone
com.android.gallery3d.ui.RawTexture -> com.android.gallery3d.ui.m:
    com.android.gallery3d.ui.RawTexture newInstance(com.android.gallery3d.ui.GLCanvas) -> a
    boolean onBind(com.android.gallery3d.ui.GLCanvas) -> onBind
    boolean isOpaque() -> isOpaque
    void yield() -> yield
com.android.gallery3d.ui.SynchronizedHandler -> com.android.gallery3d.ui.SynchronizedHandler:
    com.android.gallery3d.ui.GLRoot mRoot -> a
    void dispatchMessage(android.os.Message) -> dispatchMessage
com.android.gallery3d.ui.Texture -> com.android.gallery3d.ui.Texture:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void draw(com.android.gallery3d.ui.GLCanvas,int,int) -> draw
    void draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int) -> draw
    boolean isOpaque() -> isOpaque
com.android.gallery3d.ui.UploadedTexture -> com.android.gallery3d.ui.n:
    boolean mContentValid -> a
    boolean mOpaque -> b
    boolean mThrottled -> c
    int sUploadedCount -> d
    android.graphics.Bitmap mBitmap -> mBitmap
    int[] sTextureId -> f
    int[] sCropRect -> g
    void setThrottled(boolean) -> setThrottled
    android.graphics.Bitmap getBitmap() -> a
    void freeBitmap() -> b
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap onGetBitmap() -> onGetBitmap
    void onFreeBitmap(android.graphics.Bitmap) -> onFreeBitmap
    void invalidateContent() -> invalidateContent
    boolean isContentValid(com.android.gallery3d.ui.GLCanvas) -> isContentValid
    void updateContent(com.android.gallery3d.ui.GLCanvas) -> updateContent
    void resetUploadLimit() -> resetUploadLimit
    boolean uploadLimitReached() -> uploadLimitReached
    boolean onBind(com.android.gallery3d.ui.GLCanvas) -> onBind
    void setOpaque(boolean) -> setOpaque
    boolean isOpaque() -> isOpaque
    void recycle() -> recycle
com.android.gallery3d.util.Future -> com.android.gallery3d.util.Future:
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    void requestCancel() -> requestCancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
com.android.gallery3d.util.FutureHelper -> com.android.gallery3d.util.FutureHelper:
    com.android.gallery3d.util.FutureHelper$Sync mSync -> a
    com.android.gallery3d.util.FutureListener mListener -> b
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object get() -> get
    void setResult(java.lang.Object) -> setResult
    void setException(java.lang.Throwable) -> setException
    void cancelled() -> cancelled
    void requestCancel() -> requestCancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    boolean isCancelling() -> isCancelling
    void onCancel() -> onCancel
    void access$0(com.android.gallery3d.util.FutureHelper) -> a
com.android.gallery3d.util.FutureHelper$Sync -> com.android.gallery3d.util.a:
    java.util.concurrent.atomic.AtomicInteger mState -> b
    java.lang.Object mResult -> c
    java.util.concurrent.ExecutionException mException -> d
    com.android.gallery3d.util.FutureHelper this$0 -> a
    int tryAcquireShared(int) -> tryAcquireShared
    boolean tryReleaseShared(int) -> tryReleaseShared
    java.lang.Object innerGet(long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object innerGet() -> a
    void innerCancelled() -> b
    void innerSetResult(java.lang.Object) -> a
    void innerSetException(java.lang.Throwable) -> a
    void innerRequestCancel() -> c
    boolean innerIsCanclled() -> d
    boolean innerIsDone() -> e
    boolean innerIsCanclling() -> f
com.android.gallery3d.util.FutureListener -> com.android.gallery3d.util.FutureListener:
    void onFutureDone(com.android.gallery3d.util.Future) -> onFutureDone
com.android.gallery3d.util.FutureTask -> com.android.gallery3d.util.FutureTask:
    java.util.concurrent.Callable mCallable -> a
    com.android.gallery3d.util.FutureTask$MyHelper mHelper -> b
    java.lang.Thread mRunner -> c
    java.util.concurrent.atomic.AtomicInteger mState -> d
    boolean mInterruptible -> e
    void requestCancel() -> requestCancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    void run() -> run
    void onRequestCancel() -> onRequestCancel
    void cancelTask() -> cancelTask
    java.util.concurrent.atomic.AtomicInteger access$0(com.android.gallery3d.util.FutureTask) -> a
com.android.gallery3d.util.FutureTask$MyHelper -> com.android.gallery3d.util.b:
    com.android.gallery3d.util.FutureTask this$0 -> a
    void onCancel() -> onCancel
com.android.gallery3d.util.IntArray -> com.android.gallery3d.util.IntArray:
    int[] mData -> a
    int mSize -> b
    void add(int) -> add
    int size() -> size
    int[] toArray(int[]) -> toArray
    int[] getInternalArray() -> getInternalArray
    void clear() -> clear
com.android.gallery3d.util.Utils -> com.android.gallery3d.util.Utils:
    int UNCONSTRAINED -> UNCONSTRAINED
    boolean sInit -> b
    long[] sCrcTable -> c
    java.nio.charset.Charset sUtf8Codec -> d
    float sPixelDensity -> a
    java.lang.Thread sCurrentThread -> e
    boolean sWarned -> f
    int computeSampleSize(android.graphics.BitmapFactory$Options,int,int) -> computeSampleSize
    android.graphics.Bitmap resize(android.graphics.Bitmap,int) -> resize
    android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap,int) -> resizeBitmap
    void Assert(boolean) -> Assert
    void Assert(boolean,java.lang.String) -> Assert
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean isPowerOf2(int) -> isPowerOf2
    int nextPowerOf2(int) -> nextPowerOf2
    float distance(float,float,float,float) -> distance
    int clamp(int,int,int) -> clamp
    float clamp(float,float,float) -> clamp
    float dpToPixel(android.content.Context,float) -> dpToPixel
    int dpToPixel(android.content.Context,int) -> dpToPixel
    boolean isOpaque(int) -> isOpaque
    void swap(java.lang.Object[],int,int) -> swap
    long crc64Long(java.lang.String) -> crc64Long
    byte[] getBytesInUtf8(java.lang.String) -> getBytesInUtf8
    void setRenderThread() -> setRenderThread
    void assertNotInRenderThread() -> assertNotInRenderThread
    void closeSilently(java.io.Closeable) -> closeSilently
    int compare(long,long) -> compare
com.anthonymandra.content.RESTfulContentProvider -> com.anthonymandra.content.RESTfulContentProvider:
    com.anthonymandra.framework.FileHandlerFactory mFileHandlerFactory -> a
    java.util.Map mRequestsInProgress -> b
    java.lang.String storagePath -> c
    boolean mExternalStorageAvailable -> d
    boolean mExternalStorageWriteable -> e
    boolean onCreate() -> onCreate
com.anthonymandra.content.RawContentProvider -> com.anthonymandra.content.RawContentProvider:
    int DATABASE_VERSION -> b
    android.content.UriMatcher sUriMatcher -> c
    com.anthonymandra.content.RawContentProvider$DatabaseHelper mOpenHelper -> d
    android.database.sqlite.SQLiteDatabase mDb -> e
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    java.lang.Long mediaExists(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.anthonymandra.content.RawContentProvider$DatabaseHelper -> com.anthonymandra.content.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void createTable(android.database.sqlite.SQLiteDatabase) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.anthonymandra.content.RawImage -> com.anthonymandra.content.b:
com.anthonymandra.content.RawImage$RawImages -> com.anthonymandra.content.c:
    android.net.Uri RAW_IMAGES_URI -> a
    android.net.Uri RAW_THUMB_URI -> b
    android.net.Uri CONTENT_URI -> c
com.anthonymandra.dcraw.Dcraw -> com.anthonymandra.dcraw.Dcraw:
    java.util.Queue remainingFiles -> a
    java.util.List completedFiles -> completedFiles
    boolean active1 -> b
    boolean active2 -> c
    boolean active3 -> d
    java.lang.Thread extract1 -> e
    java.lang.Thread extract2 -> f
    java.lang.Thread extract3 -> g
    java.lang.Thread waitThread -> h
    int dcraw1(int,java.lang.String[]) -> dcraw1
    int dcraw2(int,java.lang.String[]) -> dcraw2
    int dcraw3(int,java.lang.String[]) -> dcraw3
    int callOnThread(java.lang.String[]) -> a
    boolean canDecode(java.lang.String) -> canDecode
    int DecodeRaw(java.lang.String,java.lang.String) -> DecodeRaw
    int ExtractExif(java.lang.String,java.lang.String) -> ExtractExif
    int ExtractThumb(java.lang.String,java.lang.String) -> ExtractThumb
com.anthonymandra.framework.FileHandlerFactory -> com.anthonymandra.a.a:
    java.lang.String mCacheDir -> a
com.anthonymandra.rawdroid.FormatDialog -> com.anthonymandra.rawdroid.a:
    java.util.List sourceFiles -> a
    android.widget.Spinner spinner -> b
    android.content.Context mContext -> c
    com.anthonymandra.rawdroid.FormatDialog$ResponseListener responseListener -> d
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List access$0(com.anthonymandra.rawdroid.FormatDialog) -> a
    android.widget.Spinner access$1(com.anthonymandra.rawdroid.FormatDialog) -> b
    void access$2$7e70161e(java.io.File,java.lang.String) -> a
    com.anthonymandra.rawdroid.FormatDialog$ResponseListener access$3(com.anthonymandra.rawdroid.FormatDialog) -> c
com.anthonymandra.rawdroid.FormatDialog$AcceptListener -> com.anthonymandra.rawdroid.b:
    com.anthonymandra.rawdroid.FormatDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.anthonymandra.rawdroid.FormatDialog$CancelListener -> com.anthonymandra.rawdroid.c:
    com.anthonymandra.rawdroid.FormatDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.anthonymandra.rawdroid.FormatDialog$ResponseListener -> com.anthonymandra.rawdroid.d:
    void Response(java.lang.Boolean) -> a
com.anthonymandra.rawdroid.ImageAdapter -> com.anthonymandra.rawdroid.e:
    android.content.Context mContext -> a
    java.util.List images -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.anthonymandra.rawdroid.MetaParser -> com.anthonymandra.rawdroid.f:
    com.anthonymandra.rawdroid.SupportedMeta Parse(java.io.File) -> a
com.anthonymandra.rawdroid.PPMtoBMP -> com.anthonymandra.rawdroid.g:
    android.graphics.Bitmap ReadBitmapFromPPM(java.io.File) -> a
com.anthonymandra.rawdroid.RawDroid -> com.anthonymandra.rawdroid.RawDroid:
    java.lang.String startPoint -> d
    java.lang.String path -> e
    java.lang.String ROOT -> f
    android.os.Parcelable gridState -> g
    android.widget.GridView imageGrid -> a
    com.anthonymandra.rawdroid.ImageAdapter imageAdapter -> b
    java.util.List allFiles -> h
    java.util.List imageFiles -> c
    int thumbSize -> i
    java.io.File storagePath -> j
    boolean mExternalStorageAvailable -> k
    boolean mExternalStorageWriteable -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean convertThumb(java.io.File) -> b
    android.graphics.Bitmap extractThumb(java.lang.String) -> a
    java.io.File getStoragePath() -> a
    java.io.File getThumb(java.io.File) -> a
    java.io.File getThumb(int) -> a
    java.io.File getThumb(java.lang.String) -> b
    java.io.File getThumbnailStorage() -> b
    boolean isNativeImage(java.io.File) -> c
    void Initialize() -> c
    void onBackPressed() -> onBackPressed
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setPath(java.lang.String) -> c
    java.util.List getRawFiles(java.io.File[]) -> a
    void access$0(com.anthonymandra.rawdroid.RawDroid,java.lang.String) -> a
    void access$1(com.anthonymandra.rawdroid.RawDroid) -> a
    void access$2(com.anthonymandra.rawdroid.RawDroid,android.os.Parcelable) -> a
    java.util.List access$3(com.anthonymandra.rawdroid.RawDroid) -> b
    int access$4(com.anthonymandra.rawdroid.RawDroid,int) -> a
com.anthonymandra.rawdroid.RawDroid$1 -> com.anthonymandra.rawdroid.h:
    com.anthonymandra.rawdroid.RawDroid this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.anthonymandra.rawdroid.RawDroid$2 -> com.anthonymandra.rawdroid.i:
    com.anthonymandra.rawdroid.RawDroid this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.anthonymandra.rawdroid.RawDroid$3 -> com.anthonymandra.rawdroid.j:
    com.anthonymandra.rawdroid.RawDroid this$0 -> a
    void onClick(android.view.View) -> onClick
com.anthonymandra.rawdroid.RawDroid$5 -> com.anthonymandra.rawdroid.k:
    java.io.File val$ppmFile -> a
    void run() -> run
com.anthonymandra.rawdroid.RawDroid$DirAlphaComparator -> com.anthonymandra.rawdroid.l:
    com.anthonymandra.rawdroid.RawDroid this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.anthonymandra.rawdroid.RawDroid$OnPathClickListener -> com.anthonymandra.rawdroid.m:
    java.lang.String path -> a
    com.anthonymandra.rawdroid.RawDroid this$0 -> b
    void onClick(android.view.View) -> onClick
com.anthonymandra.rawdroid.RawDroid$OnResponseListener -> com.anthonymandra.rawdroid.n:
    com.anthonymandra.rawdroid.RawDroid this$0 -> a
    void Response(java.lang.Boolean) -> a
com.anthonymandra.rawdroid.SupportedMeta -> com.anthonymandra.rawdroid.o:
    java.lang.String Iso -> a
    java.lang.String Exposure -> b
    java.lang.String Aperture -> c
    java.lang.String FocalLength -> d
    java.lang.String Height -> e
    java.lang.String Width -> f
    java.lang.String Flash -> g
    java.lang.String Name -> h
    java.lang.String WhiteBalance -> i
    java.lang.String ExposureMode -> j
    java.lang.String ExposureProgram -> k
    java.lang.String Date -> l
    java.lang.String Make -> m
    java.lang.String Model -> n
    java.lang.String Altitude -> o
    java.lang.String Latitude -> p
    java.lang.String Longitude -> q
    java.lang.String Lens -> r
    java.lang.String DriveMode -> s
com.anthonymandra.rawdroid.LegacyViewerActivity -> com.anthonymandra.rawdroid.LegacyViewerActivity:
    com.android.gallery3d.ui.GLRootView mGLRootView -> d
    com.android.gallery3d.app.StateManager mStateManager -> e
    com.android.gallery3d.data.ImageService mImageService -> f
    com.android.gallery3d.ui.PositionRepository mPositionRepository -> g
    com.android.gallery3d.data.DownloadService mDownloadService -> h
    com.android.gallery3d.data.DecodeService mDecodeService -> i
    com.pocketjourney.view.TransparentPanel metaPanel -> j
    java.util.Timer autoHide -> k
    android.widget.ImageButton showMetaButton -> l
    int displayWidth -> a
    int displayHeight -> b
    int mImageIndex -> m
    int numExifLoads -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void Copy(java.io.File,java.io.File) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loadExif() -> a
    int getImageIndex() -> b
    void decrementImageIndex() -> c
    void incrementImageIndex() -> d
    android.content.Context getAndroidContext() -> getAndroidContext
    com.android.gallery3d.data.ImageService getImageService() -> getImageService
    com.android.gallery3d.app.StateManager getStateManager() -> getStateManager
    com.android.gallery3d.ui.GLRoot getGLRoot() -> getGLRoot
    com.android.gallery3d.ui.PositionRepository getPositionRepository() -> getPositionRepository
    com.android.gallery3d.data.DownloadService getDownloadService() -> getDownloadService
    com.android.gallery3d.data.DecodeService getDecodeService() -> getDecodeService
    void access$0(com.anthonymandra.rawdroid.LegacyViewerActivity) -> a
    com.pocketjourney.view.TransparentPanel access$1(com.anthonymandra.rawdroid.LegacyViewerActivity) -> b
    void access$2(com.anthonymandra.rawdroid.LegacyViewerActivity) -> c
    android.widget.ImageButton access$3(com.anthonymandra.rawdroid.LegacyViewerActivity) -> d
    void access$4(com.anthonymandra.rawdroid.LegacyViewerActivity) -> e
    void access$5(com.anthonymandra.rawdroid.LegacyViewerActivity,java.lang.String,com.anthonymandra.rawdroid.SupportedMeta) -> a
    int access$6(com.anthonymandra.rawdroid.LegacyViewerActivity) -> f
    com.android.gallery3d.app.StateManager access$7(com.anthonymandra.rawdroid.LegacyViewerActivity) -> g
com.anthonymandra.rawdroid.LegacyViewerActivity$1 -> com.anthonymandra.rawdroid.p:
    com.anthonymandra.rawdroid.LegacyViewerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.anthonymandra.rawdroid.LegacyViewerActivity$2 -> com.anthonymandra.rawdroid.q:
    com.anthonymandra.rawdroid.LegacyViewerActivity this$0 -> a
    void run() -> run
com.anthonymandra.rawdroid.LegacyViewerActivity$3 -> com.anthonymandra.rawdroid.r:
    com.anthonymandra.rawdroid.LegacyViewerActivity this$0 -> a
    void run() -> run
com.anthonymandra.rawdroid.LegacyViewerActivity$4 -> com.anthonymandra.rawdroid.s:
    com.anthonymandra.rawdroid.LegacyViewerActivity this$0 -> a
    java.lang.String val$filename -> b
    com.anthonymandra.rawdroid.SupportedMeta val$meta -> c
    void run() -> run
com.anthonymandra.rawdroid.LegacyViewerActivity$5 -> com.anthonymandra.rawdroid.t:
    com.anthonymandra.rawdroid.LegacyViewerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.anthonymandra.rawdroid.LegacyViewerActivity$6 -> com.anthonymandra.rawdroid.u:
    com.anthonymandra.rawdroid.LegacyViewerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.anthonymandra.rawdroid.LegacyViewerActivity$7 -> com.anthonymandra.rawdroid.v:
    com.anthonymandra.rawdroid.LegacyViewerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.anthonymandra.rawdroid.LegacyViewerActivity$AutoHideMetaTask -> com.anthonymandra.rawdroid.w:
    com.anthonymandra.rawdroid.LegacyViewerActivity this$0 -> a
    void run() -> run
com.drew.imaging.ImageMetadataReader -> com.b.a.a:
    boolean $assertionsDisabled -> a
    com.drew.metadata.Metadata readMetadata(java.io.File) -> a
com.drew.imaging.ImageProcessingException -> com.b.a.b:
com.drew.imaging.PhotographicConversions -> com.b.a.c:
    double ROOT_TWO -> a
    double apertureToFStop(double) -> a
com.drew.imaging.jpeg.JpegMetadataReader -> com.b.a.a.a:
    com.drew.metadata.Metadata extractMetadataFromJpegSegmentReader(com.drew.imaging.jpeg.JpegSegmentData) -> a
com.drew.imaging.jpeg.JpegProcessingException -> com.b.a.a.b:
com.drew.imaging.jpeg.JpegSegmentData -> com.b.a.a.c:
    java.util.HashMap _segmentDataMap -> a
    void addSegment(byte,byte[]) -> a
    byte[] getSegment(byte) -> a
    java.lang.Iterable getSegments(byte) -> b
    java.util.List getSegmentList(byte) -> c
com.drew.imaging.jpeg.JpegSegmentReader -> com.b.a.a.d:
    com.drew.imaging.jpeg.JpegSegmentData _segmentData -> a
    com.drew.imaging.jpeg.JpegSegmentData getSegmentData() -> a
    com.drew.imaging.jpeg.JpegSegmentData readSegments$753b3542(java.io.BufferedInputStream) -> a
    boolean checkForBytesOnStream$7ca6060e(java.io.BufferedInputStream,int) -> a
com.drew.imaging.tiff.TiffMetadataReader -> com.b.a.b.a:
    com.drew.metadata.Metadata readMetadata(java.io.File) -> a
com.drew.lang.BufferBoundsException -> com.b.b.a:
com.drew.lang.BufferReader -> com.b.b.b:
    byte[] _buffer -> a
    boolean _isMotorolaByteOrder -> b
    int getLength() -> a
    void setMotorolaByteOrder(boolean) -> a
    boolean isMotorolaByteOrder() -> b
    byte getByte(int) -> a
    int getUInt8(int) -> b
    int getUInt16(int) -> c
    int getInt32(int) -> d
    long getInt64(int) -> e
    float getS15Fixed16(int) -> f
    float getFloat32(int) -> g
    double getDouble64(int) -> h
    byte[] getBytes(int,int) -> a
    java.lang.String getString(int,int) -> b
    java.lang.String getString(int,int,java.lang.String) -> a
    java.lang.String getNullTerminatedString(int,int) -> c
    void CheckBounds(int,int) -> d
com.drew.lang.CompoundException -> com.b.b.c:
    java.lang.Throwable _innerException -> a
    java.lang.String toString() -> toString
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printStackTrace() -> printStackTrace
com.drew.lang.Rational -> com.b.b.d:
    long _numerator -> a
    long _denominator -> b
    double doubleValue() -> doubleValue
    float floatValue() -> floatValue
    byte byteValue() -> byteValue
    int intValue() -> intValue
    long longValue() -> longValue
    short shortValue() -> shortValue
    long getDenominator() -> a
    long getNumerator() -> b
    com.drew.lang.Rational getReciprocal() -> c
    boolean isInteger() -> d
    java.lang.String toString() -> toString
    java.lang.String toSimpleString(boolean) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.drew.lang.StringUtil -> com.b.b.e:
    java.lang.String join(java.lang.Iterable,java.lang.String) -> a
com.drew.metadata.Age -> com.b.c.a:
    int _years -> a
    int _months -> b
    int _days -> c
    int _hours -> d
    int _minutes -> e
    int _seconds -> f
    com.drew.metadata.Age fromPanasonicString(java.lang.String) -> a
    java.lang.String toString() -> toString
    java.lang.String toFriendlyString() -> a
    void appendAgePart(java.lang.StringBuilder,int,java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.drew.metadata.Directory -> com.b.c.b:
    java.util.Map _tagMap -> a
    java.util.Collection _definedTagList -> b
    java.util.Collection _errorList -> e
    com.drew.metadata.TagDescriptor _descriptor -> c
    boolean $assertionsDisabled -> d
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
    boolean containsTag(int) -> a
    java.util.Collection getTags() -> c
    void setDescriptor(com.drew.metadata.TagDescriptor) -> a
    void addError(java.lang.String) -> a
    void setInt(int,int) -> a
    void setIntArray(int,int[]) -> a
    void setFloat(int,float) -> a
    void setFloatArray(int,float[]) -> a
    void setDouble(int,double) -> a
    void setDoubleArray(int,double[]) -> a
    void setString(int,java.lang.String) -> a
    void setStringArray(int,java.lang.String[]) -> a
    void setLong$255f656(long) -> a
    void setDate(int,java.util.Date) -> a
    void setRational(int,com.drew.lang.Rational) -> a
    void setRationalArray(int,com.drew.lang.Rational[]) -> a
    void setByteArray(int,byte[]) -> a
    void setObject(int,java.lang.Object) -> a
    java.lang.Integer getInteger(int) -> b
    java.lang.String[] getStringArray(int) -> c
    int[] getIntArray(int) -> d
    byte[] getByteArray(int) -> e
    java.lang.Double getDoubleObject(int) -> f
    java.lang.Float getFloatObject(int) -> g
    java.lang.Long getLongObject$75cc2ed9() -> d
    com.drew.lang.Rational getRational(int) -> h
    com.drew.lang.Rational[] getRationalArray(int) -> i
    java.lang.String getString(int) -> j
    java.lang.Object getObject(int) -> k
    java.lang.String getTagName(int) -> l
    java.lang.String getDescription(int) -> m
com.drew.metadata.Face -> com.b.c.c:
    int _x -> a
    int _y -> b
    int _width -> c
    int _height -> d
    java.lang.String _name -> e
    com.drew.metadata.Age _age -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.drew.metadata.Metadata -> com.b.c.d:
    java.util.Map _directoryByClass -> a
    java.util.Collection _directoryList -> b
    java.lang.Iterable getDirectories() -> a
    com.drew.metadata.Directory getOrCreateDirectory(java.lang.Class) -> a
    com.drew.metadata.Directory getDirectory(java.lang.Class) -> b
com.drew.metadata.Tag -> com.b.c.e:
    int _tagType -> a
    com.drew.metadata.Directory _directory -> b
    int getTagType() -> a
    java.lang.String getDescription() -> b
    java.lang.String toString() -> toString
com.drew.metadata.TagDescriptor -> com.b.c.f:
    com.drew.metadata.Directory _directory -> a
    java.lang.String getDescription(int) -> a
    java.lang.String convertBytesToVersionString(int[],int) -> a
com.drew.metadata.adobe.AdobeJpegDescriptor -> com.b.c.a.a:
    java.lang.String getDescription(int) -> a
com.drew.metadata.adobe.AdobeJpegDirectory -> com.b.c.a.b:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.adobe.AdobeJpegReader -> com.b.c.a.c:
com.drew.metadata.exif.CanonMakernoteDescriptor -> com.b.c.b.a:
    java.lang.String getDescription(int) -> a
    java.lang.String getFocalUnitsPerMillimetreDescription() -> a
com.drew.metadata.exif.CanonMakernoteDirectory -> com.b.c.b.b:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
    void setIntArray(int,int[]) -> a
com.drew.metadata.exif.CasioType1MakernoteDescriptor -> com.b.c.b.c:
    java.lang.String getDescription(int) -> a
com.drew.metadata.exif.CasioType1MakernoteDirectory -> com.b.c.b.d:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.CasioType2MakernoteDescriptor -> com.b.c.b.e:
    java.lang.String getDescription(int) -> a
com.drew.metadata.exif.CasioType2MakernoteDirectory -> com.b.c.b.f:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.ExifIFD0Descriptor -> com.b.c.b.g:
    boolean _allowDecimalRepresentationOfRationals -> b
    java.lang.String getDescription(int) -> a
    java.lang.String getResolutionDescription() -> a
    java.lang.String getUnicodeDescription(int) -> b
com.drew.metadata.exif.ExifIFD0Directory -> com.b.c.b.h:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.ExifInteropDescriptor -> com.b.c.b.i:
    java.lang.String getDescription(int) -> a
com.drew.metadata.exif.ExifInteropDirectory -> com.b.c.b.j:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.ExifReader -> com.b.c.b.k:
    int[] BYTES_PER_FORMAT -> a
    void extract(byte[],com.drew.metadata.Metadata) -> a
    void extractTiff(byte[],com.drew.metadata.Metadata) -> b
    void extractIFD(com.drew.metadata.Metadata,com.drew.metadata.exif.ExifIFD0Directory,int,com.drew.lang.BufferReader) -> a
    void processDirectory(com.drew.metadata.Directory,java.util.Set,int,int,com.drew.metadata.Metadata,com.drew.lang.BufferReader) -> a
    void processTag(com.drew.metadata.Directory,int,int,int,int,com.drew.lang.BufferReader) -> a
    int calculateTagOffset(int,int) -> a
com.drew.metadata.exif.ExifSubIFDDescriptor -> com.b.c.b.l:
    boolean _allowDecimalRepresentationOfRationals -> b
    java.text.DecimalFormat SimpleDecimalFormatter -> c
    java.lang.String getDescription(int) -> a
    java.lang.String getUserCommentDescription() -> a
    java.lang.String getFocalPlaneResolutionUnitDescription() -> b
    java.lang.String getComponentConfigurationDescription() -> c
com.drew.metadata.exif.ExifSubIFDDirectory -> com.b.c.b.m:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.ExifThumbnailDescriptor -> com.b.c.b.n:
    boolean _allowDecimalRepresentationOfRationals -> b
    java.lang.String getDescription(int) -> a
    java.lang.String getResolutionDescription() -> a
com.drew.metadata.exif.ExifThumbnailDirectory -> com.b.c.b.o:
    java.util.HashMap _tagNameMap -> e
    byte[] _thumbnailData -> f
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
    void setThumbnailData(byte[]) -> a
com.drew.metadata.exif.FujifilmMakernoteDescriptor -> com.b.c.b.p:
    java.lang.String getDescription(int) -> a
    java.lang.String getOnOffDescription(int) -> b
com.drew.metadata.exif.FujifilmMakernoteDirectory -> com.b.c.b.q:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.GpsDescriptor -> com.b.c.b.r:
    java.lang.String getDescription(int) -> a
    java.lang.String getDegreesMinutesSecondsDescription(int) -> b
    long calcLCD(long,long) -> a
com.drew.metadata.exif.GpsDirectory -> com.b.c.b.s:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.KodakMakernoteDescriptor -> com.b.c.b.t:
com.drew.metadata.exif.KodakMakernoteDirectory -> com.b.c.b.u:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.KyoceraMakernoteDescriptor -> com.b.c.b.v:
    java.lang.String getDescription(int) -> a
com.drew.metadata.exif.KyoceraMakernoteDirectory -> com.b.c.b.w:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.NikonType1MakernoteDescriptor -> com.b.c.b.x:
    java.lang.String getDescription(int) -> a
com.drew.metadata.exif.NikonType1MakernoteDirectory -> com.b.c.b.y:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.NikonType2MakernoteDescriptor -> com.b.c.b.z:
    java.lang.String getDescription(int) -> a
    java.lang.String getEVDescription(int[]) -> a
com.drew.metadata.exif.NikonType2MakernoteDirectory -> com.b.c.b.aa:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.OlympusMakernoteDescriptor -> com.b.c.b.ab:
    java.lang.String getDescription(int) -> a
com.drew.metadata.exif.OlympusMakernoteDirectory -> com.b.c.b.ac:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.PanasonicMakernoteDescriptor -> com.b.c.b.ad:
    java.lang.String getDescription(int) -> a
    java.lang.String getTransformDescription(int) -> b
    java.lang.String buildFacesDescription(com.drew.metadata.Face[]) -> a
    java.lang.String getInternalSerialNumberDescription() -> a
    java.lang.String getTextDescription(int) -> c
    java.lang.String getOnOffDescription(int) -> d
com.drew.metadata.exif.PanasonicMakernoteDirectory -> com.b.c.b.ae:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
    com.drew.metadata.Face[] getDetectedFaces() -> e
    com.drew.metadata.Face[] getRecognizedFaces() -> f
    com.drew.metadata.Age getAge(int) -> n
com.drew.metadata.exif.PentaxMakernoteDescriptor -> com.b.c.b.af:
    java.lang.String getDescription(int) -> a
com.drew.metadata.exif.PentaxMakernoteDirectory -> com.b.c.b.ag:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.SigmaMakernoteDescriptor -> com.b.c.b.ah:
com.drew.metadata.exif.SigmaMakernoteDirectory -> com.b.c.b.ai:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.SonyType1MakernoteDescriptor -> com.b.c.b.aj:
    java.lang.String getDescription(int) -> a
com.drew.metadata.exif.SonyType1MakernoteDirectory -> com.b.c.b.ak:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.exif.SonyType6MakernoteDescriptor -> com.b.c.b.al:
    java.lang.String getDescription(int) -> a
com.drew.metadata.exif.SonyType6MakernoteDirectory -> com.b.c.b.am:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.icc.IccDescriptor -> com.b.c.c.a:
    java.lang.String getDescription(int) -> a
    java.lang.String getTagDataString(int) -> b
    java.lang.String formatDoubleAsString$63b1897a(double) -> a
    java.lang.String getPlatformDescription() -> a
    java.lang.String getProfileClassDescription() -> b
    int getInt32FromString(java.lang.String) -> a
com.drew.metadata.icc.IccDirectory -> com.b.c.c.b:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.icc.IccReader -> com.b.c.c.c:
    void extract(byte[],com.drew.metadata.Metadata) -> a
    void set4ByteString(com.drew.metadata.Directory,int,com.drew.lang.BufferReader) -> a
    void setInt32(com.drew.metadata.Directory,int,com.drew.lang.BufferReader) -> b
    java.lang.String getStringFromInt32(int) -> a
com.drew.metadata.iptc.IptcDescriptor -> com.b.c.d.a:
    java.lang.String getDescription(int) -> a
com.drew.metadata.iptc.IptcDirectory -> com.b.c.d.b:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.iptc.IptcReader -> com.b.c.d.c:
    void extract(byte[],com.drew.metadata.Metadata) -> a
com.drew.metadata.jfif.JfifDescriptor -> com.b.c.e.a:
    java.lang.String getDescription(int) -> a
com.drew.metadata.jfif.JfifDirectory -> com.b.c.e.b:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.jfif.JfifReader -> com.b.c.e.c:
com.drew.metadata.jpeg.JpegCommentDescriptor -> com.b.c.f.a:
com.drew.metadata.jpeg.JpegCommentDirectory -> com.b.c.f.b:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.jpeg.JpegCommentReader -> com.b.c.f.c:
com.drew.metadata.jpeg.JpegComponent -> com.b.c.f.d:
    int _componentId -> a
    int _samplingFactorByte -> b
    int _quantizationTableNumber -> c
    java.lang.String getComponentName() -> a
    int getQuantizationTableNumber() -> b
    int getHorizontalSamplingFactor() -> c
    int getVerticalSamplingFactor() -> d
com.drew.metadata.jpeg.JpegDescriptor -> com.b.c.f.e:
    java.lang.String getDescription(int) -> a
    java.lang.String getComponentDataDescription(int) -> b
com.drew.metadata.jpeg.JpegDirectory -> com.b.c.f.f:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
    com.drew.metadata.jpeg.JpegComponent getComponent(int) -> n
com.drew.metadata.jpeg.JpegReader -> com.b.c.f.g:
com.drew.metadata.photoshop.PhotoshopDescriptor -> com.b.c.g.a:
    java.lang.String getDescription(int) -> a
    java.lang.String getJpegQualityString() -> a
    java.lang.String getPixelAspectRatioString() -> b
    java.lang.String getPrintScaleDescription() -> c
    java.lang.String getResolutionInfoDescription() -> d
    java.lang.String getVersionDescription() -> e
    java.lang.String getSlicesDescription() -> f
    java.lang.String getThumbnailDescription(int) -> b
    java.lang.String get32BitNumberString(int) -> c
com.drew.metadata.photoshop.PhotoshopDirectory -> com.b.c.g.b:
    java.util.HashMap _tagNameMap -> e
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
com.drew.metadata.photoshop.PhotoshopReader -> com.b.c.g.c:
    void extract(byte[],com.drew.metadata.Metadata) -> a
com.drew.metadata.xmp.XmpDescriptor -> com.b.c.h.a:
    java.text.DecimalFormat SimpleDecimalFormatter -> b
    java.lang.String getDescription(int) -> a
com.drew.metadata.xmp.XmpDirectory -> com.b.c.h.b:
    java.util.HashMap _tagNameMap -> e
    java.util.Map _propertyValueByPath -> f
    com.adobe.xmp.XMPMeta _xmpMeta -> g
    java.lang.String getName() -> a
    java.util.HashMap getTagNameMap() -> b
    void addProperty(java.lang.String,java.lang.String) -> a
    void setXMPMeta(com.adobe.xmp.XMPMeta) -> a
com.drew.metadata.xmp.XmpReader -> com.b.c.h.c:
    void extract(byte[],com.drew.metadata.Metadata) -> a
    void processXmpTag(com.adobe.xmp.XMPMeta,com.drew.metadata.xmp.XmpDirectory,java.lang.String,java.lang.String,int,int) -> a
    void processXmpDateTag(com.adobe.xmp.XMPMeta,com.drew.metadata.xmp.XmpDirectory,java.lang.String,java.lang.String,int) -> a
com.github.droidfu.DroidFu -> com.github.droidfu.DroidFu:
    java.lang.String XMLNS -> XMLNS
com.github.droidfu.DroidFuApplication -> com.github.droidfu.DroidFuApplication:
    java.util.HashMap contextObjects -> a
    android.content.Context getActiveContext(java.lang.String) -> getActiveContext
    void setActiveContext(java.lang.String,android.content.Context) -> setActiveContext
    void resetActiveContext(java.lang.String) -> resetActiveContext
    void onClose() -> onClose
com.github.droidfu.adapters.ListAdapterWithProgress -> com.github.droidfu.adapters.ListAdapterWithProgress:
    boolean isLoadingData -> a
    android.view.View progressView -> b
    java.util.ArrayList data -> c
    android.widget.AbsListView listView -> d
    android.widget.AbsListView getListView() -> getListView
    android.view.View getProgressView() -> getProgressView
    int getCount() -> getCount
    boolean isEmpty() -> isEmpty
    int getItemCount() -> getItemCount
    boolean hasItems() -> hasItems
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean isEnabled(int) -> isEnabled
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    void setIsLoadingData(boolean) -> setIsLoadingData
    void setIsLoadingData(boolean,boolean) -> setIsLoadingData
    boolean isLoadingData() -> isLoadingData
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View doGetView(int,android.view.View,android.view.ViewGroup) -> doGetView
    boolean isPositionOfProgressElement(int) -> a
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    java.util.ArrayList getData() -> getData
    void addAll(java.util.List) -> addAll
    void addAll(java.util.List,boolean) -> addAll
    void clear() -> clear
    void remove(int) -> remove
com.github.droidfu.adapters.WebGalleryAdapter -> com.github.droidfu.adapters.WebGalleryAdapter:
    int NO_DRAWABLE -> NO_DRAWABLE
    java.util.List imageUrls -> a
    android.content.Context context -> b
    android.graphics.drawable.Drawable progressDrawable -> c
    android.graphics.drawable.Drawable errorDrawable -> d
    void initialize(android.content.Context,java.util.List,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void setImageUrls(java.util.List) -> setImageUrls
    java.util.List getImageUrls() -> getImageUrls
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onGetView(int,android.view.View,android.view.ViewGroup) -> onGetView
com.github.droidfu.adapters.WebGalleryAdapter$ViewHolder -> com.github.droidfu.adapters.a:
    com.github.droidfu.widgets.WebImageView webImageView -> a
    void access$1(com.github.droidfu.adapters.WebGalleryAdapter$ViewHolder,com.github.droidfu.widgets.WebImageView) -> a
    com.github.droidfu.widgets.WebImageView access$2(com.github.droidfu.adapters.WebGalleryAdapter$ViewHolder) -> a
com.github.droidfu.cachefu.AbstractCache -> com.github.droidfu.cachefu.AbstractCache:
    int DISK_CACHE_INTERNAL -> DISK_CACHE_INTERNAL
    int DISK_CACHE_SDCARD -> DISK_CACHE_SDCARD
    boolean isDiskCacheEnabled -> a
    java.lang.String diskCacheDirectory -> diskCacheDirectory
    java.util.concurrent.ConcurrentMap cache -> b
    java.lang.String name -> c
    long expirationInMinutes -> d
    void sanitizeDiskCache() -> a
    boolean enableDiskCache(android.content.Context,int) -> enableDiskCache
    void setRootDir(java.lang.String) -> a
    java.lang.String getDiskCacheDirectory() -> getDiskCacheDirectory
    java.lang.String getFileNameForKey(java.lang.Object) -> getFileNameForKey
    java.lang.Object readValueFromDisk(java.io.File) -> readValueFromDisk
    void writeValueToDisk(java.io.File,java.lang.Object) -> writeValueToDisk
    java.io.File getFileForKey(java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyInMemory(java.lang.Object) -> containsKeyInMemory
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeKey(java.lang.Object) -> removeKey
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    void setDiskCacheEnabled(java.lang.String) -> setDiskCacheEnabled
    void clear() -> clear
    java.util.Collection values() -> values
com.github.droidfu.cachefu.CacheHelper -> com.github.droidfu.cachefu.CacheHelper:
    java.lang.String getFileNameFromUrl(java.lang.String) -> getFileNameFromUrl
    void removeAllWithStringPrefix(com.github.droidfu.cachefu.AbstractCache,java.lang.String) -> removeAllWithStringPrefix
com.github.droidfu.cachefu.CacheHelper$1 -> com.github.droidfu.cachefu.a:
    java.io.File val$cacheDir -> a
    com.github.droidfu.cachefu.AbstractCache val$cache -> b
    java.lang.String val$urlPrefix -> c
    boolean accept(java.io.File,java.lang.String) -> accept
com.github.droidfu.cachefu.CachedList -> com.github.droidfu.cachefu.CachedList:
    java.lang.Class clazz -> clazz
    java.util.ArrayList list -> list
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.ArrayList getList() -> getList
    void add(com.github.droidfu.cachefu.CachedModel) -> add
    void set(int,com.github.droidfu.cachefu.CachedModel) -> set
    com.github.droidfu.cachefu.CachedModel get(int) -> get
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    java.lang.String createKey(java.lang.String) -> createKey
    boolean reload(com.github.droidfu.cachefu.ModelCache) -> reload
    boolean reloadFromCachedModel(com.github.droidfu.cachefu.ModelCache,com.github.droidfu.cachefu.CachedModel) -> reloadFromCachedModel
    void readFromParcel(android.os.Parcel) -> readFromParcel
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.github.droidfu.cachefu.CachedList$1 -> com.github.droidfu.cachefu.b:
    com.github.droidfu.cachefu.CachedList createFromParcel(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.github.droidfu.cachefu.CachedModel -> com.github.droidfu.cachefu.CachedModel:
    java.lang.String id -> a
    long transactionId -> b
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    void setTransactionId(long) -> a
    java.lang.String getKey() -> getKey
    com.github.droidfu.cachefu.CachedModel find(com.github.droidfu.cachefu.ModelCache,java.lang.String,java.lang.Class) -> find
    boolean save(com.github.droidfu.cachefu.ModelCache) -> save
    boolean save(com.github.droidfu.cachefu.ModelCache,java.lang.String) -> save
    boolean reload(com.github.droidfu.cachefu.ModelCache) -> reload
    java.lang.String createKey(java.lang.String) -> createKey
    boolean reloadFromCachedModel(com.github.droidfu.cachefu.ModelCache,com.github.droidfu.cachefu.CachedModel) -> reloadFromCachedModel
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> readFromParcel
com.github.droidfu.cachefu.HttpResponseCache -> com.github.droidfu.cachefu.HttpResponseCache:
    void removeAllWithPrefix(java.lang.String) -> removeAllWithPrefix
    java.lang.String getFileNameForKey(java.lang.String) -> getFileNameForKey
    com.github.droidfu.http.CachedHttpResponse$ResponseData readValueFromDisk(java.io.File) -> readValueFromDisk
    void writeValueToDisk(java.io.File,com.github.droidfu.http.CachedHttpResponse$ResponseData) -> writeValueToDisk
    java.lang.String getFileNameForKey(java.lang.Object) -> getFileNameForKey
    void writeValueToDisk(java.io.File,java.lang.Object) -> writeValueToDisk
    java.lang.Object readValueFromDisk(java.io.File) -> readValueFromDisk
com.github.droidfu.cachefu.ImageCache -> com.github.droidfu.cachefu.ImageCache:
    void removeAllWithPrefix(java.lang.String) -> removeAllWithPrefix
    java.lang.String getFileNameForKey(java.lang.String) -> getFileNameForKey
    byte[] readValueFromDisk(java.io.File) -> readValueFromDisk
    android.graphics.Bitmap getBitmap(java.lang.Object) -> getBitmap
    void writeValueToDisk(java.io.File,byte[]) -> writeValueToDisk
    java.lang.String getFileNameForKey(java.lang.Object) -> getFileNameForKey
    void writeValueToDisk(java.io.File,java.lang.Object) -> writeValueToDisk
    java.lang.Object readValueFromDisk(java.io.File) -> readValueFromDisk
com.github.droidfu.cachefu.ModelCache -> com.github.droidfu.cachefu.ModelCache:
    long transactionCount -> a
    com.github.droidfu.cachefu.CachedModel put(java.lang.String,com.github.droidfu.cachefu.CachedModel) -> put
    void removeAllWithPrefix(java.lang.String) -> removeAllWithPrefix
    java.lang.String getFileNameForKey(java.lang.String) -> getFileNameForKey
    com.github.droidfu.cachefu.CachedModel readValueFromDisk(java.io.File) -> readValueFromDisk
    void writeValueToDisk(java.io.File,com.github.droidfu.cachefu.CachedModel) -> writeValueToDisk
    java.lang.String getFileNameForKey(java.lang.Object) -> getFileNameForKey
    void writeValueToDisk(java.io.File,java.lang.Object) -> writeValueToDisk
    java.lang.Object readValueFromDisk(java.io.File) -> readValueFromDisk
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.github.droidfu.dialogs.DialogClickListener -> com.github.droidfu.dialogs.DialogClickListener:
    void onClick(int,java.lang.Object) -> onClick
com.github.droidfu.exception.ResourceMessageException -> com.github.droidfu.exception.ResourceMessageException:
    int getClientMessageResourceId() -> getClientMessageResourceId
com.github.droidfu.http.BetterHttp -> com.github.droidfu.http.BetterHttp:
    int DEFAULT_MAX_CONNECTIONS -> DEFAULT_MAX_CONNECTIONS
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    java.lang.String DEFAULT_HTTP_USER_AGENT -> DEFAULT_HTTP_USER_AGENT
    int maxConnections -> a
    int socketTimeout -> b
    java.lang.String httpUserAgent -> c
    java.util.HashMap defaultHeaders -> d
    org.apache.http.impl.client.AbstractHttpClient httpClient -> e
    android.content.Context appContext -> f
    com.github.droidfu.cachefu.HttpResponseCache responseCache -> g
    void setupHttpClient() -> setupHttpClient
    void enableResponseCache(int,long,int) -> enableResponseCache
    void enableGZIPEncoding() -> enableGZIPEncoding
    void enableResponseCache(android.content.Context,int,long,int,int) -> enableResponseCache
    com.github.droidfu.cachefu.HttpResponseCache getResponseCache() -> getResponseCache
    void setHttpClient(org.apache.http.impl.client.AbstractHttpClient) -> setHttpClient
    org.apache.http.impl.client.AbstractHttpClient getHttpClient() -> getHttpClient
    void updateProxySettings() -> updateProxySettings
    com.github.droidfu.http.BetterHttpRequest get(java.lang.String) -> get
    com.github.droidfu.http.BetterHttpRequest get(java.lang.String,boolean) -> get
    com.github.droidfu.http.BetterHttpRequest post(java.lang.String) -> post
    com.github.droidfu.http.BetterHttpRequest post(java.lang.String,org.apache.http.HttpEntity) -> post
    com.github.droidfu.http.BetterHttpRequest put(java.lang.String) -> put
    com.github.droidfu.http.BetterHttpRequest put(java.lang.String,org.apache.http.HttpEntity) -> put
    com.github.droidfu.http.BetterHttpRequest delete(java.lang.String) -> delete
    void setMaximumConnections(int) -> setMaximumConnections
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void setDefaultHeader(java.lang.String,java.lang.String) -> setDefaultHeader
    java.util.HashMap getDefaultHeaders() -> getDefaultHeaders
    void setContext(android.content.Context) -> setContext
    void setPortForScheme(java.lang.String,int) -> setPortForScheme
    void setUserAgent(java.lang.String) -> setUserAgent
com.github.droidfu.http.BetterHttp$GZIPHttpRequestInterceptor -> com.github.droidfu.http.a:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.github.droidfu.http.BetterHttp$GZIPHttpResponseInterceptor -> com.github.droidfu.http.b:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.github.droidfu.http.BetterHttp$GZIPInflatingEntity -> com.github.droidfu.http.c:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.github.droidfu.http.BetterHttpRequest -> com.github.droidfu.http.BetterHttpRequest:
    org.apache.http.client.methods.HttpUriRequest unwrap() -> unwrap
    java.lang.String getRequestUrl() -> getRequestUrl
    com.github.droidfu.http.BetterHttpRequest expecting(java.lang.Integer[]) -> expecting
    com.github.droidfu.http.BetterHttpRequest retries(int) -> retries
    com.github.droidfu.http.BetterHttpRequest withTimeout(int) -> withTimeout
    com.github.droidfu.http.BetterHttpResponse send() -> send
com.github.droidfu.http.BetterHttpRequestBase -> com.github.droidfu.http.BetterHttpRequestBase:
    java.lang.String HTTP_CONTENT_TYPE_HEADER -> HTTP_CONTENT_TYPE_HEADER
    java.util.List expectedStatusCodes -> expectedStatusCodes
    org.apache.http.impl.client.AbstractHttpClient httpClient -> httpClient
    org.apache.http.client.methods.HttpUriRequest request -> request
    int maxRetries -> maxRetries
    int oldTimeout -> a
    int executionCount -> b
    org.apache.http.client.methods.HttpUriRequest unwrap() -> unwrap
    java.lang.String getRequestUrl() -> getRequestUrl
    com.github.droidfu.http.BetterHttpRequestBase expecting(java.lang.Integer[]) -> expecting
    com.github.droidfu.http.BetterHttpRequestBase retries(int) -> retries
    com.github.droidfu.http.BetterHttpRequest withTimeout(int) -> withTimeout
    com.github.droidfu.http.BetterHttpResponse send() -> send
    boolean retryRequest(com.github.droidfu.http.BetterHttpRequestRetryHandler,java.io.IOException,org.apache.http.protocol.HttpContext) -> a
    com.github.droidfu.http.BetterHttpResponse handleResponse(org.apache.http.HttpResponse) -> handleResponse
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
    com.github.droidfu.http.BetterHttpRequest retries(int) -> retries
    com.github.droidfu.http.BetterHttpRequest expecting(java.lang.Integer[]) -> expecting
com.github.droidfu.http.BetterHttpRequestRetryHandler -> com.github.droidfu.http.BetterHttpRequestRetryHandler:
    java.util.HashSet exceptionWhitelist -> a
    java.util.HashSet exceptionBlacklist -> b
    int maxRetries -> c
    int timesRetried -> d
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    int getTimesRetried() -> getTimesRetried
com.github.droidfu.http.BetterHttpResponse -> com.github.droidfu.http.BetterHttpResponse:
    org.apache.http.HttpResponse unwrap() -> unwrap
    java.io.InputStream getResponseBody() -> getResponseBody
    byte[] getResponseBodyAsBytes() -> getResponseBodyAsBytes
    java.lang.String getResponseBodyAsString() -> getResponseBodyAsString
    int getStatusCode() -> getStatusCode
    java.lang.String getHeader(java.lang.String) -> getHeader
com.github.droidfu.http.BetterHttpResponseImpl -> com.github.droidfu.http.BetterHttpResponseImpl:
    org.apache.http.HttpResponse response -> a
    org.apache.http.HttpEntity entity -> b
    org.apache.http.HttpResponse unwrap() -> unwrap
    java.io.InputStream getResponseBody() -> getResponseBody
    byte[] getResponseBodyAsBytes() -> getResponseBodyAsBytes
    java.lang.String getResponseBodyAsString() -> getResponseBodyAsString
    int getStatusCode() -> getStatusCode
    java.lang.String getHeader(java.lang.String) -> getHeader
com.github.droidfu.http.CachedHttpRequest -> com.github.droidfu.http.CachedHttpRequest:
    java.lang.String url -> a
    java.lang.String getRequestUrl() -> getRequestUrl
    com.github.droidfu.http.BetterHttpRequest expecting(java.lang.Integer[]) -> expecting
    com.github.droidfu.http.BetterHttpRequest retries(int) -> retries
    com.github.droidfu.http.BetterHttpResponse send() -> send
    org.apache.http.client.methods.HttpUriRequest unwrap() -> unwrap
    com.github.droidfu.http.BetterHttpRequest withTimeout(int) -> withTimeout
com.github.droidfu.http.CachedHttpResponse -> com.github.droidfu.http.CachedHttpResponse:
    com.github.droidfu.cachefu.HttpResponseCache responseCache -> a
    com.github.droidfu.http.CachedHttpResponse$ResponseData cachedData -> b
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.io.InputStream getResponseBody() -> getResponseBody
    byte[] getResponseBodyAsBytes() -> getResponseBodyAsBytes
    java.lang.String getResponseBodyAsString() -> getResponseBodyAsString
    int getStatusCode() -> getStatusCode
    org.apache.http.HttpResponse unwrap() -> unwrap
com.github.droidfu.http.CachedHttpResponse$ResponseData -> com.github.droidfu.http.CachedHttpResponse$ResponseData:
    int statusCode -> a
    byte[] responseBody -> b
    int getStatusCode() -> getStatusCode
    byte[] getResponseBody() -> getResponseBody
    byte[] access$0(com.github.droidfu.http.CachedHttpResponse$ResponseData) -> a
    int access$1(com.github.droidfu.http.CachedHttpResponse$ResponseData) -> b
com.github.droidfu.http.ConnectionChangedBroadcastReceiver -> com.github.droidfu.http.ConnectionChangedBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.github.droidfu.http.HttpDelete -> com.github.droidfu.http.d:
com.github.droidfu.http.HttpGet -> com.github.droidfu.http.e:
com.github.droidfu.http.HttpPost -> com.github.droidfu.http.f:
com.github.droidfu.http.HttpPut -> com.github.droidfu.http.g:
com.github.droidfu.http.ssl.EasySSLSocketFactory -> com.github.droidfu.http.ssl.EasySSLSocketFactory:
    javax.net.ssl.SSLContext sslcontext -> a
    javax.net.ssl.SSLContext createEasySSLContext() -> a
    javax.net.ssl.SSLContext getSSLContext() -> b
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.github.droidfu.http.ssl.TrivialTrustManager -> com.github.droidfu.http.ssl.TrivialTrustManager:
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.github.droidfu.imageloader.ImageLoader -> com.github.droidfu.imageloader.ImageLoader:
    int HANDLER_MESSAGE_ID -> HANDLER_MESSAGE_ID
    java.lang.String BITMAP_EXTRA -> BITMAP_EXTRA
    java.lang.String IMAGE_URL_EXTRA -> IMAGE_URL_EXTRA
    java.util.concurrent.ThreadPoolExecutor executor -> a
    com.github.droidfu.cachefu.ImageCache imageCache -> b
    int numRetries -> c
    long expirationInMinutes -> d
    java.lang.String imageUrl -> e
    com.github.droidfu.imageloader.ImageLoaderHandler handler -> f
    void setThreadPoolSize(int) -> setThreadPoolSize
    void setMaxDownloadAttempts(int) -> setMaxDownloadAttempts
    void initialize(android.content.Context) -> initialize
    void initialize(android.content.Context,long) -> initialize
    void start(java.lang.String,android.widget.ImageView) -> start
    void start(java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> start
    void start(java.lang.String,com.github.droidfu.imageloader.ImageLoaderHandler) -> start
    void start(java.lang.String,com.github.droidfu.imageloader.ImageLoaderHandler,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> start
    void start$189535cf(java.lang.String,android.widget.ImageView,com.github.droidfu.imageloader.ImageLoaderHandler,android.graphics.drawable.Drawable) -> a
    void clearCache() -> clearCache
    com.github.droidfu.cachefu.ImageCache getImageCache() -> getImageCache
    void run() -> run
    void removeImage(java.lang.String) -> removeImage
    android.graphics.Bitmap downloadImage() -> downloadImage
    byte[] retrieveImageData() -> retrieveImageData
    void notifyImageLoaded(java.lang.String,android.graphics.Bitmap) -> notifyImageLoaded
com.github.droidfu.imageloader.ImageLoaderHandler -> com.github.droidfu.imageloader.ImageLoaderHandler:
    android.widget.ImageView imageView -> a
    java.lang.String imageUrl -> b
    android.graphics.drawable.Drawable errorDrawable -> c
    void handleMessage(android.os.Message) -> handleMessage
    void handleImageLoadedMessage(android.os.Message) -> handleImageLoadedMessage
    boolean handleImageLoaded(android.graphics.Bitmap,android.os.Message) -> handleImageLoaded
    java.lang.String getImageUrl() -> getImageUrl
    void setImageUrl(java.lang.String) -> setImageUrl
    android.widget.ImageView getImageView() -> getImageView
    void setImageView(android.widget.ImageView) -> setImageView
com.github.droidfu.services.BetterService -> com.github.droidfu.services.BetterService:
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.github.droidfu.support.ArraySupport -> com.github.droidfu.support.ArraySupport:
    java.lang.Object[] join(java.lang.Object[],java.lang.Object[]) -> join
    java.lang.Object[] delete(java.lang.Object[],int) -> delete
    int find(java.lang.Object[],java.lang.Object) -> find
com.github.droidfu.support.DiagnosticSupport -> com.github.droidfu.support.DiagnosticSupport:
    int ANDROID_API_LEVEL -> ANDROID_API_LEVEL
    java.lang.String getAndroidId(android.content.Context) -> getAndroidId
    java.lang.String getAndroidId(android.content.Context,java.lang.String) -> getAndroidId
    java.lang.String getApplicationVersionString(android.content.Context) -> getApplicationVersionString
    java.lang.String createDiagnosis(android.app.Activity,java.lang.Exception) -> createDiagnosis
com.github.droidfu.support.DisplaySupport -> com.github.droidfu.support.DisplaySupport:
    int SCREEN_DENSITY_LOW -> SCREEN_DENSITY_LOW
    int SCREEN_DENSITY_MEDIUM -> SCREEN_DENSITY_MEDIUM
    int SCREEN_DENSITY_HIGH -> SCREEN_DENSITY_HIGH
    int screenDensity -> a
    int dipToPx(android.content.Context,int) -> dipToPx
    android.graphics.drawable.Drawable scaleDrawable(android.content.Context,int,int,int) -> scaleDrawable
    int getScreenDensity(android.content.Context) -> getScreenDensity
com.github.droidfu.support.IntentSupport -> com.github.droidfu.support.IntentSupport:
    java.lang.String MIME_TYPE_EMAIL -> MIME_TYPE_EMAIL
    java.lang.String MIME_TYPE_TEXT -> MIME_TYPE_TEXT
    boolean isIntentAvailable(android.content.Context,java.lang.String,android.net.Uri,java.lang.String) -> isIntentAvailable
    boolean isIntentAvailable(android.content.Context,java.lang.String,java.lang.String) -> isIntentAvailable
    boolean isIntentAvailable(android.content.Context,android.content.Intent) -> isIntentAvailable
    android.content.Intent newEmailIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> newEmailIntent
    android.content.Intent newShareIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> newShareIntent
    android.content.Intent newMapsIntent(java.lang.String,java.lang.String) -> newMapsIntent
    android.content.Intent newTakePictureIntent(java.io.File) -> newTakePictureIntent
    android.content.Intent newSelectPictureIntent() -> newSelectPictureIntent
    android.content.Intent newDialNumberIntent(java.lang.String) -> newDialNumberIntent
    android.content.Intent newCallNumberIntent(java.lang.String) -> newCallNumberIntent
com.github.droidfu.support.StringSupport -> com.github.droidfu.support.StringSupport:
    java.lang.String underscore(java.lang.String) -> underscore
    java.lang.String[] splitByCharacterTypeCamelCase(java.lang.String) -> splitByCharacterTypeCamelCase
com.github.droidfu.widgets.WebImageView -> com.github.droidfu.widgets.WebImageView:
    java.lang.String imageUrl -> a
    boolean isLoaded -> b
    android.widget.ProgressBar loadingSpinner -> c
    android.widget.ImageView imageView -> d
    android.widget.ImageView$ScaleType scaleType -> e
    android.graphics.drawable.Drawable progressDrawable -> f
    android.graphics.drawable.Drawable errorDrawable -> g
    void initialize(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,boolean) -> a
    void setErrorDrawable(android.graphics.drawable.Drawable) -> setErrorDrawable
    void loadImage() -> loadImage
    void reLoadImage() -> reLoadImage
    boolean isLoaded() -> isLoaded
    void setImageUrl(java.lang.String) -> setImageUrl
    void setNoImageDrawable(int) -> setNoImageDrawable
    void reset() -> reset
    java.lang.String getImageUrl() -> getImageUrl
    android.widget.ImageView access$0(com.github.droidfu.widgets.WebImageView) -> a
    java.lang.String access$1(com.github.droidfu.widgets.WebImageView) -> b
    android.graphics.drawable.Drawable access$2(com.github.droidfu.widgets.WebImageView) -> c
    void access$3$324197f6(com.github.droidfu.widgets.WebImageView) -> d
com.github.droidfu.widgets.WebImageView$DefaultImageLoaderHandler -> com.github.droidfu.widgets.a:
    com.github.droidfu.widgets.WebImageView this$0 -> a
    boolean handleImageLoaded(android.graphics.Bitmap,android.os.Message) -> handleImageLoaded
com.google.common.base.FinalizableReference -> com.google.common.base.FinalizableReference:
    void finalizeReferent() -> finalizeReferent
com.google.common.base.FinalizableReferenceQueue -> com.google.common.base.FinalizableReferenceQueue:
    java.util.logging.Logger logger -> c
    java.lang.reflect.Method startFinalizer -> d
    java.lang.ref.ReferenceQueue queue -> a
    boolean threadStarted -> b
    void cleanUp() -> a
    java.lang.reflect.Method getStartFinalizer(java.lang.Class) -> a
    java.util.logging.Logger access$0() -> b
com.google.common.base.FinalizableReferenceQueue$DecoupledLoader -> com.google.common.base.a:
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableReferenceQueue$DirectLoader -> com.google.common.base.b:
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableReferenceQueue$FinalizerLoader -> com.google.common.base.c:
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableReferenceQueue$SystemLoader -> com.google.common.base.d:
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableSoftReference -> com.google.common.base.FinalizableSoftReference:
com.google.common.base.FinalizableWeakReference -> com.google.common.base.FinalizableWeakReference:
com.google.common.base.Function -> com.google.common.base.Function:
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.common.base.Objects -> com.google.common.base.Objects:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hashCode(java.lang.Object[]) -> hashCode
com.google.common.base.internal.Finalizer -> com.google.common.base.internal.Finalizer:
    java.util.logging.Logger logger -> a
    java.lang.ref.WeakReference finalizableReferenceClassReference -> b
    java.lang.ref.PhantomReference frqReference -> c
    java.lang.ref.ReferenceQueue queue -> d
    java.lang.reflect.Field inheritableThreadLocals -> e
    java.lang.ref.ReferenceQueue startFinalizer(java.lang.Class,java.lang.Object) -> startFinalizer
    void run() -> run
    java.lang.reflect.Method getFinalizeReferentMethod() -> a
    java.lang.reflect.Field getInheritableThreadLocalsField() -> getInheritableThreadLocalsField
com.google.common.base.internal.Finalizer$ShutDown -> com.google.common.base.internal.a:
com.google.common.collect.AbstractMapEntry -> com.google.common.collect.a:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AsynchronousComputationException -> com.google.common.collect.AsynchronousComputationException:
com.google.common.collect.ComputationException -> com.google.common.collect.ComputationException:
com.google.common.collect.CustomConcurrentHashMap -> com.google.common.collect.CustomConcurrentHashMap:
com.google.common.collect.CustomConcurrentHashMap$Builder -> com.google.common.collect.b:
    int initialCapacity -> a
    int concurrencyLevel -> b
    int getInitialCapacity() -> a
    int getConcurrencyLevel() -> b
com.google.common.collect.CustomConcurrentHashMap$ComputingImpl -> com.google.common.collect.c:
    com.google.common.collect.CustomConcurrentHashMap$ComputingStrategy computingStrategy -> a
    com.google.common.base.Function computer -> b
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.CustomConcurrentHashMap$ComputingStrategy -> com.google.common.collect.CustomConcurrentHashMap$ComputingStrategy:
    java.lang.Object compute(java.lang.Object,java.lang.Object,com.google.common.base.Function) -> compute
    java.lang.Object waitForValue(java.lang.Object) -> waitForValue
com.google.common.collect.CustomConcurrentHashMap$Impl -> com.google.common.collect.d:
    com.google.common.collect.CustomConcurrentHashMap$Strategy strategy -> c
    int segmentMask -> d
    int segmentShift -> e
    com.google.common.collect.CustomConcurrentHashMap$Impl$Segment[] segments -> f
    java.util.Set keySet -> g
    java.util.Collection values -> h
    java.util.Set entrySet -> i
    int hash(java.lang.Object) -> a
    com.google.common.collect.CustomConcurrentHashMap$Impl$Segment segmentFor(int) -> a
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
com.google.common.collect.CustomConcurrentHashMap$Impl$EntryIterator -> com.google.common.collect.e:
    com.google.common.collect.CustomConcurrentHashMap$Impl this$1 -> a
    java.lang.Object next() -> next
com.google.common.collect.CustomConcurrentHashMap$Impl$EntrySet -> com.google.common.collect.f:
    com.google.common.collect.CustomConcurrentHashMap$Impl this$1 -> a
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.collect.CustomConcurrentHashMap$Impl$HashIterator -> com.google.common.collect.g:
    int nextSegmentIndex -> b
    int nextTableIndex -> c
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> d
    java.lang.Object nextEntry -> e
    com.google.common.collect.CustomConcurrentHashMap$Impl$WriteThroughEntry nextExternal -> f
    com.google.common.collect.CustomConcurrentHashMap$Impl$WriteThroughEntry lastReturned -> g
    com.google.common.collect.CustomConcurrentHashMap$Impl this$1 -> h
    void advance() -> b
    boolean nextInChain() -> c
    boolean nextInTable() -> d
    boolean advanceTo(java.lang.Object) -> a
    boolean hasNext() -> hasNext
    com.google.common.collect.CustomConcurrentHashMap$Impl$WriteThroughEntry nextEntry() -> a
    void remove() -> remove
com.google.common.collect.CustomConcurrentHashMap$Impl$InternalsImpl -> com.google.common.collect.h:
    com.google.common.collect.CustomConcurrentHashMap$Impl this$1 -> a
    java.lang.Object getEntry(java.lang.Object) -> getEntry
    boolean removeEntry(java.lang.Object,java.lang.Object) -> removeEntry
    boolean removeEntry(java.lang.Object) -> removeEntry
com.google.common.collect.CustomConcurrentHashMap$Impl$KeyIterator -> com.google.common.collect.i:
    com.google.common.collect.CustomConcurrentHashMap$Impl this$1 -> a
    java.lang.Object next() -> next
com.google.common.collect.CustomConcurrentHashMap$Impl$KeySet -> com.google.common.collect.j:
    com.google.common.collect.CustomConcurrentHashMap$Impl this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.CustomConcurrentHashMap$Impl$Segment -> com.google.common.collect.k:
    int count -> a
    int modCount -> b
    int threshold -> c
    java.util.concurrent.atomic.AtomicReferenceArray table -> d
    com.google.common.collect.CustomConcurrentHashMap$Impl this$1 -> e
    java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> a
    java.lang.Object getFirst(int) -> b
    java.lang.Object getEntry(java.lang.Object,int) -> a
    java.lang.Object get(java.lang.Object,int) -> b
    boolean containsKey(java.lang.Object,int) -> c
    boolean containsValue(java.lang.Object) -> a
    boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> a
    java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> a
    void expand() -> a
    java.lang.Object remove(java.lang.Object,int) -> d
    boolean remove(java.lang.Object,int,java.lang.Object) -> b
    boolean removeEntry(java.lang.Object,int,java.lang.Object) -> c
    boolean removeEntry(java.lang.Object,int) -> e
    void clear() -> b
com.google.common.collect.CustomConcurrentHashMap$Impl$ValueIterator -> com.google.common.collect.l:
    com.google.common.collect.CustomConcurrentHashMap$Impl this$1 -> a
    java.lang.Object next() -> next
com.google.common.collect.CustomConcurrentHashMap$Impl$Values -> com.google.common.collect.m:
    com.google.common.collect.CustomConcurrentHashMap$Impl this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.common.collect.CustomConcurrentHashMap$Impl$WriteThroughEntry -> com.google.common.collect.n:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.google.common.collect.CustomConcurrentHashMap$Impl this$1 -> c
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.CustomConcurrentHashMap$Internals -> com.google.common.collect.CustomConcurrentHashMap$Internals:
    java.lang.Object getEntry(java.lang.Object) -> getEntry
    boolean removeEntry(java.lang.Object,java.lang.Object) -> removeEntry
    boolean removeEntry(java.lang.Object) -> removeEntry
com.google.common.collect.CustomConcurrentHashMap$Strategy -> com.google.common.collect.CustomConcurrentHashMap$Strategy:
    java.lang.Object newEntry(java.lang.Object,int,java.lang.Object) -> newEntry
    java.lang.Object copyEntry(java.lang.Object,java.lang.Object,java.lang.Object) -> copyEntry
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    boolean equalKeys(java.lang.Object,java.lang.Object) -> equalKeys
    boolean equalValues(java.lang.Object,java.lang.Object) -> equalValues
    int hashKey(java.lang.Object) -> hashKey
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object getNext(java.lang.Object) -> getNext
    int getHash(java.lang.Object) -> getHash
    void setInternals(com.google.common.collect.CustomConcurrentHashMap$Internals) -> setInternals
com.google.common.collect.ExpirationTimer -> com.google.common.collect.o:
    java.util.Timer instance -> a
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    com.google.common.collect.MapMaker$Strength keyStrength -> a
    com.google.common.collect.MapMaker$Strength valueStrength -> b
    long expirationNanos -> c
    boolean useCustomMap -> d
    com.google.common.collect.CustomConcurrentHashMap$Builder builder -> e
    com.google.common.collect.MapMaker$ValueReference COMPUTING -> f
    com.google.common.collect.MapMaker initialCapacity(int) -> initialCapacity
    com.google.common.collect.MapMaker concurrencyLevel(int) -> concurrencyLevel
    com.google.common.collect.MapMaker weakKeys() -> weakKeys
    com.google.common.collect.MapMaker softKeys() -> softKeys
    com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMaker$Strength) -> a
    com.google.common.collect.MapMaker weakValues() -> weakValues
    com.google.common.collect.MapMaker softValues() -> softValues
    com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMaker$Strength) -> b
    com.google.common.collect.MapMaker expiration(long,java.util.concurrent.TimeUnit) -> expiration
    java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    java.util.concurrent.ConcurrentMap makeComputingMap(com.google.common.base.Function) -> makeComputingMap
    com.google.common.collect.MapMaker$Strength access$0(com.google.common.collect.MapMaker) -> a
    com.google.common.collect.MapMaker$Strength access$1(com.google.common.collect.MapMaker) -> b
    long access$2(com.google.common.collect.MapMaker) -> c
    com.google.common.collect.CustomConcurrentHashMap$Builder access$3(com.google.common.collect.MapMaker) -> d
    com.google.common.collect.MapMaker$ValueReference access$4() -> a
    com.google.common.collect.MapMaker$ValueReference access$5() -> b
com.google.common.collect.MapMaker$1 -> com.google.common.collect.p:
    java.lang.Object get() -> get
    com.google.common.collect.MapMaker$ValueReference copyFor(com.google.common.collect.MapMaker$ReferenceEntry) -> a
    java.lang.Object waitForValue() -> a
com.google.common.collect.MapMaker$ComputationExceptionReference -> com.google.common.collect.q:
    java.lang.Throwable t -> a
    java.lang.Object get() -> get
    com.google.common.collect.MapMaker$ValueReference copyFor(com.google.common.collect.MapMaker$ReferenceEntry) -> a
    java.lang.Object waitForValue() -> a
com.google.common.collect.MapMaker$LinkedSoftEntry -> com.google.common.collect.r:
    com.google.common.collect.MapMaker$ReferenceEntry next -> a
    com.google.common.collect.MapMaker$ReferenceEntry getNext() -> a
com.google.common.collect.MapMaker$LinkedStrongEntry -> com.google.common.collect.s:
    com.google.common.collect.MapMaker$ReferenceEntry next -> a
    com.google.common.collect.MapMaker$ReferenceEntry getNext() -> a
com.google.common.collect.MapMaker$LinkedWeakEntry -> com.google.common.collect.t:
    com.google.common.collect.MapMaker$ReferenceEntry next -> a
    com.google.common.collect.MapMaker$ReferenceEntry getNext() -> a
com.google.common.collect.MapMaker$NullOutputExceptionReference -> com.google.common.collect.u:
    java.lang.String message -> a
    java.lang.Object get() -> get
    com.google.common.collect.MapMaker$ValueReference copyFor(com.google.common.collect.MapMaker$ReferenceEntry) -> a
    java.lang.Object waitForValue() -> a
com.google.common.collect.MapMaker$QueueHolder -> com.google.common.collect.v:
    com.google.common.base.FinalizableReferenceQueue queue -> a
com.google.common.collect.MapMaker$ReferenceEntry -> com.google.common.collect.w:
    com.google.common.collect.MapMaker$ValueReference getValueReference() -> b
    void setValueReference(com.google.common.collect.MapMaker$ValueReference) -> a
    void valueReclaimed() -> c
    com.google.common.collect.MapMaker$ReferenceEntry getNext() -> a
    int getHash() -> d
    java.lang.Object getKey() -> e
com.google.common.collect.MapMaker$SoftEntry -> com.google.common.collect.x:
    com.google.common.collect.CustomConcurrentHashMap$Internals internals -> b
    int hash -> c
    com.google.common.collect.MapMaker$ValueReference valueReference -> d
    java.lang.Object getKey() -> e
    void finalizeReferent() -> finalizeReferent
    com.google.common.collect.MapMaker$ValueReference getValueReference() -> b
    void setValueReference(com.google.common.collect.MapMaker$ValueReference) -> a
    void valueReclaimed() -> c
    com.google.common.collect.MapMaker$ReferenceEntry getNext() -> a
    int getHash() -> d
com.google.common.collect.MapMaker$SoftValueReference -> com.google.common.collect.y:
    com.google.common.collect.MapMaker$ReferenceEntry entry -> a
    void finalizeReferent() -> finalizeReferent
    com.google.common.collect.MapMaker$ValueReference copyFor(com.google.common.collect.MapMaker$ReferenceEntry) -> a
    java.lang.Object waitForValue() -> a
com.google.common.collect.MapMaker$StrategyImpl -> com.google.common.collect.z:
    com.google.common.collect.MapMaker$Strength keyStrength -> a
    com.google.common.collect.MapMaker$Strength valueStrength -> b
    java.util.concurrent.ConcurrentMap map -> c
    long expirationNanos -> d
    com.google.common.collect.CustomConcurrentHashMap$Internals internals -> e
    void setValue(com.google.common.collect.MapMaker$ReferenceEntry,java.lang.Object) -> a
    boolean equalKeys(java.lang.Object,java.lang.Object) -> equalKeys
    boolean equalValues(java.lang.Object,java.lang.Object) -> equalValues
    int hashKey(java.lang.Object) -> hashKey
    com.google.common.collect.MapMaker$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.collect.MapMaker$ReferenceEntry) -> a
    java.lang.Object waitForValue(com.google.common.collect.MapMaker$ReferenceEntry) -> a
    java.lang.Object compute(java.lang.Object,com.google.common.collect.MapMaker$ReferenceEntry,com.google.common.base.Function) -> a
    void setValueReference(com.google.common.collect.MapMaker$ReferenceEntry,com.google.common.collect.MapMaker$ValueReference) -> a
    void setInternals(com.google.common.collect.CustomConcurrentHashMap$Internals) -> setInternals
    java.lang.Object getValue(java.lang.Object) -> getValue
    java.lang.Object getNext(java.lang.Object) -> getNext
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object waitForValue(java.lang.Object) -> waitForValue
    int getHash(java.lang.Object) -> getHash
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object compute(java.lang.Object,java.lang.Object,com.google.common.base.Function) -> compute
    java.lang.Object copyEntry(java.lang.Object,java.lang.Object,java.lang.Object) -> copyEntry
    java.lang.Object newEntry(java.lang.Object,int,java.lang.Object) -> newEntry
com.google.common.collect.MapMaker$StrategyImpl$1 -> com.google.common.collect.aa:
    com.google.common.collect.MapMaker$StrategyImpl this$1 -> a
    java.lang.ref.WeakReference val$keyReference -> b
    java.lang.ref.WeakReference val$valueReference -> c
    void run() -> run
com.google.common.collect.MapMaker$StrategyImpl$FutureValueReference -> com.google.common.collect.ab:
    com.google.common.collect.MapMaker$ReferenceEntry original -> a
    com.google.common.collect.MapMaker$ReferenceEntry newEntry -> b
    com.google.common.collect.MapMaker$StrategyImpl this$1 -> c
    java.lang.Object get() -> get
    com.google.common.collect.MapMaker$ValueReference copyFor(com.google.common.collect.MapMaker$ReferenceEntry) -> a
    java.lang.Object waitForValue() -> a
    void removeEntry() -> b
com.google.common.collect.MapMaker$Strength -> com.google.common.collect.ac:
    com.google.common.collect.MapMaker$Strength WEAK -> a
    com.google.common.collect.MapMaker$Strength SOFT -> b
    com.google.common.collect.MapMaker$Strength STRONG -> c
    com.google.common.collect.MapMaker$Strength[] ENUM$VALUES -> d
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int hash(java.lang.Object) -> a
    com.google.common.collect.MapMaker$ValueReference referenceValue(com.google.common.collect.MapMaker$ReferenceEntry,java.lang.Object) -> a
    com.google.common.collect.MapMaker$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.common.collect.MapMaker$ReferenceEntry) -> a
    com.google.common.collect.MapMaker$Strength[] values() -> values
    com.google.common.collect.MapMaker$Strength valueOf(java.lang.String) -> valueOf
com.google.common.collect.MapMaker$Strength$1 -> com.google.common.collect.ad:
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int hash(java.lang.Object) -> a
    com.google.common.collect.MapMaker$ValueReference referenceValue(com.google.common.collect.MapMaker$ReferenceEntry,java.lang.Object) -> a
    com.google.common.collect.MapMaker$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.common.collect.MapMaker$ReferenceEntry) -> a
com.google.common.collect.MapMaker$Strength$2 -> com.google.common.collect.ae:
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int hash(java.lang.Object) -> a
    com.google.common.collect.MapMaker$ValueReference referenceValue(com.google.common.collect.MapMaker$ReferenceEntry,java.lang.Object) -> a
    com.google.common.collect.MapMaker$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.common.collect.MapMaker$ReferenceEntry) -> a
com.google.common.collect.MapMaker$Strength$3 -> com.google.common.collect.af:
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int hash(java.lang.Object) -> a
    com.google.common.collect.MapMaker$ValueReference referenceValue(com.google.common.collect.MapMaker$ReferenceEntry,java.lang.Object) -> a
    com.google.common.collect.MapMaker$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.common.collect.MapMaker$ReferenceEntry) -> a
com.google.common.collect.MapMaker$StrongEntry -> com.google.common.collect.ag:
    java.lang.Object key -> b
    com.google.common.collect.CustomConcurrentHashMap$Internals internals -> c
    int hash -> d
    com.google.common.collect.MapMaker$ValueReference valueReference -> e
    java.lang.Object getKey() -> e
    com.google.common.collect.MapMaker$ValueReference getValueReference() -> b
    void setValueReference(com.google.common.collect.MapMaker$ValueReference) -> a
    void valueReclaimed() -> c
    com.google.common.collect.MapMaker$ReferenceEntry getNext() -> a
    int getHash() -> d
com.google.common.collect.MapMaker$StrongValueReference -> com.google.common.collect.ah:
    java.lang.Object referent -> a
    java.lang.Object get() -> get
    com.google.common.collect.MapMaker$ValueReference copyFor(com.google.common.collect.MapMaker$ReferenceEntry) -> a
    java.lang.Object waitForValue() -> a
com.google.common.collect.MapMaker$ValueReference -> com.google.common.collect.ai:
    java.lang.Object get() -> get
    com.google.common.collect.MapMaker$ValueReference copyFor(com.google.common.collect.MapMaker$ReferenceEntry) -> a
    java.lang.Object waitForValue() -> a
com.google.common.collect.MapMaker$WeakEntry -> com.google.common.collect.aj:
    com.google.common.collect.CustomConcurrentHashMap$Internals internals -> b
    int hash -> c
    com.google.common.collect.MapMaker$ValueReference valueReference -> d
    java.lang.Object getKey() -> e
    void finalizeReferent() -> finalizeReferent
    com.google.common.collect.MapMaker$ValueReference getValueReference() -> b
    void setValueReference(com.google.common.collect.MapMaker$ValueReference) -> a
    void valueReclaimed() -> c
    com.google.common.collect.MapMaker$ReferenceEntry getNext() -> a
    int getHash() -> d
com.google.common.collect.MapMaker$WeakValueReference -> com.google.common.collect.ak:
    com.google.common.collect.MapMaker$ReferenceEntry entry -> a
    void finalizeReferent() -> finalizeReferent
    com.google.common.collect.MapMaker$ValueReference copyFor(com.google.common.collect.MapMaker$ReferenceEntry) -> a
    java.lang.Object waitForValue() -> a
com.google.common.collect.NullOutputException -> com.google.common.collect.al:
com.pocketjourney.view.TransparentPanel -> com.pocketjourney.view.TransparentPanel:
    android.graphics.Paint innerPaint -> a
    android.graphics.Paint borderPaint -> b
    void init() -> a
    void setInnerPaint(android.graphics.Paint) -> setInnerPaint
    void setBorderPaint(android.graphics.Paint) -> setBorderPaint
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
org.openintents.distribution.AboutDialog -> org.openintents.distribution.AboutDialog:
    void showDialogOrStartActivity(android.app.Activity,int) -> showDialogOrStartActivity
org.openintents.distribution.DistributionLibrary -> org.openintents.distribution.DistributionLibrary:
    int OFFSET_ABOUT -> OFFSET_ABOUT
    int OFFSET_UPDATE -> OFFSET_UPDATE
    int MENU_COUNT -> MENU_COUNT
    int DIALOG_COUNT -> DIALOG_COUNT
    android.app.Activity mActivity -> a
    int mFirstMenuId -> b
    int mFirstDialogId -> c
    void setFirst(int,int) -> setFirst
    boolean showEulaOrNewVersion() -> showEulaOrNewVersion
    void onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
org.openintents.distribution.DistributionLibraryActivity -> org.openintents.distribution.DistributionLibraryActivity:
    org.openintents.distribution.DistributionLibrary mDistribution -> mDistribution
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
org.openintents.distribution.DistributionLibraryListActivity -> org.openintents.distribution.DistributionLibraryListActivity:
    int MENU_DISTRIBUTION_START -> MENU_DISTRIBUTION_START
    int DIALOG_DISTRIBUTION_START -> DIALOG_DISTRIBUTION_START
    org.openintents.distribution.DistributionLibrary mDistribution -> mDistribution
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
org.openintents.distribution.DownloadAppDialog -> org.openintents.distribution.DownloadAppDialog:
    android.content.Context mContext -> a
    java.lang.String mDownloadAppName -> b
    java.lang.String mDownloadPackageName -> c
    java.lang.String mDownloadWebsite -> d
    java.lang.String mMessageText -> e
    boolean mMarketAvailable -> f
    void set(int,int,int,int) -> set
    void set(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> set
    void onClick(android.content.DialogInterface,int) -> onClick
    void onPrepareDialog(android.content.Context,android.app.Dialog) -> onPrepareDialog
    void startSaveActivity(android.content.Intent) -> startSaveActivity
org.openintents.distribution.DownloadOIAppDialog -> org.openintents.distribution.DownloadOIAppDialog:
    int OI_FILEMANAGER -> OI_FILEMANAGER
    int OI_SAFE -> OI_SAFE
org.openintents.distribution.EulaActivity -> org.openintents.distribution.EulaActivity:
    android.widget.Button mAgree -> a
    android.widget.Button mDisagree -> b
    java.lang.String mLaunchPackage -> c
    java.lang.String mLaunchClass -> d
    android.content.Intent mLaunchIntent -> e
    java.lang.String mAppName -> f
    android.widget.TextView mText1 -> g
    android.widget.TextView mText2 -> h
    android.widget.TextView mText -> i
    android.widget.ImageView mImage -> j
    void onCreate(android.os.Bundle) -> onCreate
    void accept() -> a
    void startOriginalActivity() -> b
    void refuse() -> c
    java.lang.String readTextFromRawResource(int,boolean) -> a
org.openintents.distribution.EulaActivity$1 -> org.openintents.distribution.a:
    org.openintents.distribution.EulaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.distribution.EulaActivity$2 -> org.openintents.distribution.b:
    org.openintents.distribution.EulaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.distribution.EulaOrNewVersion -> org.openintents.distribution.EulaOrNewVersion:
    java.lang.String PREFERENCES_EULA_ACCEPTED -> PREFERENCES_EULA_ACCEPTED
    java.lang.String PREFERENCES_VERSION_NUMBER -> PREFERENCES_VERSION_NUMBER
    boolean showEula(android.app.Activity) -> a
    void storeEulaAccepted(android.content.Context) -> a
    boolean showNewVersion(android.app.Activity) -> b
    void storeCurrentVersionCode(android.content.Context) -> b
    void startForwardActivity(android.app.Activity,java.lang.Class) -> a
org.openintents.distribution.InfoActivity -> org.openintents.distribution.InfoActivity:
    int[] mApplications -> mApplications
    java.lang.String[] mPackageNames -> mPackageNames
    int[] mMinVersionCodes -> mMinVersionCodes
    java.lang.String[] mMinVersionName -> mMinVersionName
    int[] mInfoText -> mInfoText
    java.lang.String[] mDeveloperUris -> mDeveloperUris
    java.lang.String[] mIntentAction -> mIntentAction
    java.lang.String[] mIntentData -> mIntentData
    int DIALOG_INFO -> DIALOG_INFO
    int DIALOG_GET_FROM_MARKET -> DIALOG_GET_FROM_MARKET
    java.lang.String[] mApplicationStrings -> a
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> init
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    void launchApplication(int) -> a
org.openintents.distribution.InfoActivity$1 -> org.openintents.distribution.c:
    org.openintents.distribution.InfoActivity this$0 -> a
    int val$pos -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.openintents.distribution.InfoActivity$FontArrayAdapter -> org.openintents.distribution.d:
    org.openintents.distribution.InfoActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.openintents.distribution.MarketUtils -> org.openintents.distribution.MarketUtils:
    java.lang.String MARKET_PACKAGE_DETAILS_PREFIX -> MARKET_PACKAGE_DETAILS_PREFIX
    boolean isMarketAvailable(android.content.Context,java.lang.String) -> isMarketAvailable
    android.content.Intent getMarketDownloadIntent(java.lang.String) -> getMarketDownloadIntent
org.openintents.distribution.NewVersionActivity -> org.openintents.distribution.NewVersionActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void accept() -> a
org.openintents.distribution.R -> org.openintents.distribution.R:
org.openintents.distribution.R$array -> org.openintents.distribution.R$array:
    int about_artists -> about_artists
    int about_authors -> about_authors
    int about_documenters -> about_documenters
    int about_translators -> about_translators
    int format_array -> format_array
org.openintents.distribution.R$attr -> org.openintents.distribution.R$attr:
org.openintents.distribution.R$drawable -> org.openintents.distribution.R$drawable:
    int android_folder -> android_folder
    int folder_bar -> folder_bar
    int ic_folder -> ic_folder
    int ic_launcher -> ic_launcher
    int ic_launcher_folder -> ic_launcher_folder
    int ic_launcher_folder_open -> ic_launcher_folder_open
    int ic_launcher_home -> ic_launcher_home
    int ic_launcher_home_small -> ic_launcher_home_small
    int ic_menu_back_small -> ic_menu_back_small
    int ic_menu_forward_small -> ic_menu_forward_small
    int ic_menu_multiselect -> ic_menu_multiselect
    int icon -> icon
    int icon_file -> icon_file
    int icon_sdcard -> icon_sdcard
    int icon_sdcard_small -> icon_sdcard_small
    int unkown_file -> unkown_file
org.openintents.distribution.R$id -> org.openintents.distribution.R$id:
    int TableRow01 -> TableRow01
    int TableRow02 -> TableRow02
    int TableRow03 -> TableRow03
    int TableRow04 -> TableRow04
    int TableRow05 -> TableRow05
    int TableRow06 -> TableRow06
    int TableRow07 -> TableRow07
    int TableRow08 -> TableRow08
    int TableRow09 -> TableRow09
    int TableRow10 -> TableRow10
    int TextView06 -> TextView06
    int TextView08 -> TextView08
    int TextView10 -> TextView10
    int TextView12 -> TextView12
    int TextView14 -> TextView14
    int TextView16 -> TextView16
    int TextView18 -> TextView18
    int TextView20 -> TextView20
    int TextViewAlt -> TextViewAlt
    int TextViewAperture -> TextViewAperture
    int TextViewDate -> TextViewDate
    int TextViewDimensions -> TextViewDimensions
    int TextViewDriveMode -> TextViewDriveMode
    int TextViewExposure -> TextViewExposure
    int TextViewExposureMode -> TextViewExposureMode
    int TextViewExposureProgram -> TextViewExposureProgram
    int TextViewFlash -> TextViewFlash
    int TextViewFocal -> TextViewFocal
    int TextViewIso -> TextViewIso
    int TextViewLat -> TextViewLat
    int TextViewLens -> TextViewLens
    int TextViewLon -> TextViewLon
    int TextViewModel -> TextViewModel
    int TextViewName -> TextViewName
    int TextViewWhite -> TextViewWhite
    int action_multiselect -> action_multiselect
    int action_normal -> action_normal
    int background -> background
    int button1 -> button1
    int button2 -> button2
    int buttonRecent -> buttonRecent
    int buttonRenameAccept -> buttonRenameAccept
    int buttonRenameCancel -> buttonRenameCancel
    int button_copy -> button_copy
    int button_delete -> button_delete
    int button_directory_pick -> button_directory_pick
    int button_move -> button_move
    int button_pick -> button_pick
    int container1 -> container1
    int container2 -> container2
    int directory_buttons -> directory_buttons
    int directory_input -> directory_input
    int directory_text -> directory_text
    int editTextFormat -> editTextFormat
    int empty -> empty
    int empty_text -> empty_text
    int fileView2 -> fileView2
    int filename -> filename
    int filenameView -> filenameView
    int foldername -> foldername
    int foldernametext -> foldernametext
    int frameLayout1 -> frameLayout1
    int gl_root_view -> gl_root_view
    int grid_reset -> grid_reset
    int gridview -> gridview
    int icon -> icon
    int imageButton1 -> imageButton1
    int imageButtonShowMeta -> imageButtonShowMeta
    int image_folder -> image_folder
    int imageview -> imageview
    int info -> info
    int labelDate -> labelDate
    int labelName -> labelName
    int linearLayout1 -> linearLayout1
    int linearLayout2 -> linearLayout2
    int pathlist -> pathlist
    int relativeLayout1 -> relativeLayout1
    int remove_images -> remove_images
    int rename -> rename
    int scan_progress -> scan_progress
    int space -> space
    int spinner1 -> spinner1
    int tableLayout1 -> tableLayout1
    int text -> text
    int text1 -> text1
    int text2 -> text2
    int transparent_panel -> transparent_panel
    int usb_test -> usb_test
    int view_delete -> view_delete
    int view_edit -> view_edit
    int view_file -> view_file
    int view_help -> view_help
    int view_save -> view_save
    int view_tag -> view_tag
    int view_wallpaper -> view_wallpaper
    int webImageView -> webImageView
org.openintents.distribution.R$integer -> org.openintents.distribution.R$integer:
    int thumbSize -> thumbSize
org.openintents.distribution.R$layout -> org.openintents.distribution.R$layout:
    int dialog_new_folder -> dialog_new_folder
    int filelist -> filelist
    int filelist_item -> filelist_item
    int fileview -> fileview
    int format_name -> format_name
    int fullimage -> fullimage
    int gridview -> gridview
    int main -> main
    int oi_distribution_eula -> oi_distribution_eula
    int oi_distribution_infoactivity -> oi_distribution_infoactivity
    int photo -> photo
org.openintents.distribution.R$menu -> org.openintents.distribution.R$menu:
    int folder_menu -> folder_menu
    int gallery -> gallery
    int grid_menu -> grid_menu
    int view_menu -> view_menu
org.openintents.distribution.R$raw -> org.openintents.distribution.R$raw:
    int license_short -> license_short
    int recent_changes -> recent_changes
org.openintents.distribution.R$string -> org.openintents.distribution.R$string:
    int DecodeAll -> DecodeAll
    int MostRecent -> MostRecent
    int about_comments -> about_comments
    int about_copyright -> about_copyright
    int about_email -> about_email
    int about_translators -> about_translators
    int about_website_url -> about_website_url
    int accept -> accept
    int app_name -> app_name
    int application_not_available -> application_not_available
    int bad_folder -> bad_folder
    int bad_source -> bad_source
    int button_Recent -> button_Recent
    int cancel -> cancel
    int copied_file_name -> copied_file_name
    int copied_file_name_2 -> copied_file_name_2
    int copy_button -> copy_button
    int copy_button_multiselect -> copy_button_multiselect
    int copy_title -> copy_title
    int create_new_folder -> create_new_folder
    int delete_button_multiselect -> delete_button_multiselect
    int deleting_files -> deleting_files
    int edit -> edit
    int error_copying_file -> error_copying_file
    int error_creating_new_folder -> error_creating_new_folder
    int error_deleting_child_file -> error_deleting_child_file
    int error_deleting_file -> error_deleting_file
    int error_deleting_folder -> error_deleting_folder
    int error_file_does_not_exists -> error_file_does_not_exists
    int error_generic -> error_generic
    int error_media_scan -> error_media_scan
    int error_moving_file -> error_moving_file
    int error_moving_folder -> error_moving_folder
    int error_renaming_file -> error_renaming_file
    int error_renaming_folder -> error_renaming_folder
    int error_selection -> error_selection
    int file -> file
    int file_copied -> file_copied
    int file_deleted -> file_deleted
    int file_moved -> file_moved
    int file_name -> file_name
    int file_renamed -> file_renamed
    int folder_deleted -> folder_deleted
    int folder_moved -> folder_moved
    int folder_name -> folder_name
    int folder_renamed -> folder_renamed
    int format_prompt -> format_prompt
    int grid_reset -> grid_reset
    int hello -> hello
    int help -> help
    int image_folder -> image_folder
    int media_scan_excluded -> media_scan_excluded
    int media_scan_included -> media_scan_included
    int menu_copy -> menu_copy
    int menu_delete -> menu_delete
    int menu_exclude_from_media_scan -> menu_exclude_from_media_scan
    int menu_exit -> menu_exit
    int menu_include_in_media_scan -> menu_include_in_media_scan
    int menu_move -> menu_move
    int menu_multi_select -> menu_multi_select
    int menu_new_folder -> menu_new_folder
    int menu_open -> menu_open
    int menu_rename -> menu_rename
    int menu_send -> menu_send
    int move_button -> move_button
    int move_button_multiselect -> move_button_multiselect
    int move_title -> move_title
    int multiselect_title -> multiselect_title
    int no_filemanager_installed -> no_filemanager_installed
    int oi_distribution_about -> oi_distribution_about
    int oi_distribution_aboutapp -> oi_distribution_aboutapp
    int oi_distribution_aboutapp_get -> oi_distribution_aboutapp_get
    int oi_distribution_aboutapp_not_available -> oi_distribution_aboutapp_not_available
    int oi_distribution_aboutapp_package -> oi_distribution_aboutapp_package
    int oi_distribution_aboutapp_website -> oi_distribution_aboutapp_website
    int oi_distribution_app_name -> oi_distribution_app_name
    int oi_distribution_download_market -> oi_distribution_download_market
    int oi_distribution_download_market_message -> oi_distribution_download_market_message
    int oi_distribution_download_message -> oi_distribution_download_message
    int oi_distribution_download_title -> oi_distribution_download_title
    int oi_distribution_download_web -> oi_distribution_download_web
    int oi_distribution_eula_accept -> oi_distribution_eula_accept
    int oi_distribution_eula_message -> oi_distribution_eula_message
    int oi_distribution_eula_refuse -> oi_distribution_eula_refuse
    int oi_distribution_eula_title -> oi_distribution_eula_title
    int oi_distribution_filemanager -> oi_distribution_filemanager
    int oi_distribution_filemanager_not_available -> oi_distribution_filemanager_not_available
    int oi_distribution_filemanager_package -> oi_distribution_filemanager_package
    int oi_distribution_filemanager_website -> oi_distribution_filemanager_website
    int oi_distribution_info_activity_text -> oi_distribution_info_activity_text
    int oi_distribution_info_instructions -> oi_distribution_info_instructions
    int oi_distribution_info_launch -> oi_distribution_info_launch
    int oi_distribution_info_not_available -> oi_distribution_info_not_available
    int oi_distribution_launch_error -> oi_distribution_launch_error
    int oi_distribution_menu_update -> oi_distribution_menu_update
    int oi_distribution_name_and_version -> oi_distribution_name_and_version
    int oi_distribution_newversion_continue -> oi_distribution_newversion_continue
    int oi_distribution_newversion_message -> oi_distribution_newversion_message
    int oi_distribution_newversion_recent_changes -> oi_distribution_newversion_recent_changes
    int oi_distribution_safe -> oi_distribution_safe
    int oi_distribution_safe_not_available -> oi_distribution_safe_not_available
    int oi_distribution_safe_not_available_decrypt -> oi_distribution_safe_not_available_decrypt
    int oi_distribution_safe_package -> oi_distribution_safe_package
    int oi_distribution_safe_website -> oi_distribution_safe_website
    int oi_distribution_update_app -> oi_distribution_update_app
    int oi_distribution_update_box_text -> oi_distribution_update_box_text
    int oi_distribution_update_check_now -> oi_distribution_update_check_now
    int oi_distribution_update_checker_package -> oi_distribution_update_checker_package
    int oi_distribution_update_checker_website -> oi_distribution_update_checker_website
    int oi_distribution_update_error -> oi_distribution_update_error
    int oi_distribution_update_get_updater -> oi_distribution_update_get_updater
    int preference_advanced_features -> preference_advanced_features
    int preference_mediascan_summary_off -> preference_mediascan_summary_off
    int preference_mediascan_summary_on -> preference_mediascan_summary_on
    int preference_mediascan_title -> preference_mediascan_title
    int really_delete -> really_delete
    int really_delete_multiselect -> really_delete_multiselect
    int rename -> rename
    int rename1 -> rename1
    int rename2 -> rename2
    int rename3 -> rename3
    int save_as -> save_as
    int save_button -> save_button
    int save_fail -> save_fail
    int save_success -> save_success
    int save_title -> save_title
    int send_not_available -> send_not_available
    int settings -> settings
    int this_folder_is_empty -> this_folder_is_empty
    int view_crop -> view_crop
    int view_decode -> view_decode
    int view_delete -> view_delete
    int view_help -> view_help
    int view_save -> view_save
    int view_tag -> view_tag
    int wallpaper -> wallpaper
org.openintents.distribution.R$xml -> org.openintents.distribution.R$xml:
    int device_filter -> device_filter
    int mimetypes -> mimetypes
    int preferences -> preferences
org.openintents.distribution.UpdateDialog -> org.openintents.distribution.UpdateDialog:
    java.lang.String[] UPDATE_CHECKER -> UPDATE_CHECKER
    void onClick(android.content.DialogInterface,int) -> onClick
    boolean isUpdateMenuNecessary(android.content.Context) -> isUpdateMenuNecessary
org.openintents.filemanager.DirectoryContents -> org.openintents.filemanager.a:
    java.util.List listDir -> a
    java.util.List listFile -> b
    java.util.List listSdCard -> c
    boolean noMedia -> d
org.openintents.filemanager.DirectoryScanner -> org.openintents.filemanager.DirectoryScanner:
    java.io.File currentDirectory -> c
    boolean cancel -> a
    java.lang.String mSdCardPath -> d
    android.content.Context context -> e
    org.openintents.filemanager.util.MimeTypes mMimeTypes -> f
    android.os.Handler handler -> g
    long operationStartTime -> h
    boolean mWriteableOnly -> i
    boolean mDirectoriesOnly -> j
    java.lang.reflect.Method formatter_formatFileSize -> b
    void clearData() -> a
    void run() -> run
org.openintents.filemanager.FileManagerActivity -> org.openintents.filemanager.FileManagerActivity:
    java.lang.Character FILE_EXTENSION_SEPARATOR -> d
    int mState -> e
    int REQUEST_CODE_MOVE -> REQUEST_CODE_MOVE
    int REQUEST_CODE_COPY -> REQUEST_CODE_COPY
    java.util.ArrayList directoryEntries -> f
    java.util.List mListDir -> a
    java.util.List mListFile -> b
    java.util.List mListSdCard -> c
    boolean mNoMedia -> g
    java.io.File currentDirectory -> h
    java.lang.String mSdCardPath -> i
    org.openintents.filemanager.util.MimeTypes mMimeTypes -> j
    java.lang.String mContextText -> k
    java.io.File mContextFile -> l
    android.graphics.drawable.Drawable mContextIcon -> m
    int mStepsBack -> n
    android.widget.EditText mEditFilename -> o
    android.widget.Button mButtonPick -> p
    android.widget.LinearLayout mDirectoryButtons -> q
    android.widget.Button mButtonMove -> r
    android.widget.Button mButtonCopy -> s
    android.widget.Button mButtonDelete -> t
    android.widget.LinearLayout mDirectoryInput -> u
    android.widget.EditText mEditDirectory -> v
    android.widget.ImageButton mButtonDirectoryPick -> w
    android.widget.LinearLayout mActionNormal -> x
    android.widget.LinearLayout mActionMultiselect -> y
    android.widget.TextView mEmptyText -> z
    android.widget.ProgressBar mProgressBar -> A
    org.openintents.filemanager.DirectoryScanner mDirectoryScanner -> B
    java.io.File mPreviousDirectory -> C
    org.openintents.filemanager.ThumbnailLoader mThumbnailLoader -> D
    android.view.MenuItem mExcludeMediaScanMenuItem -> E
    android.view.MenuItem mIncludeMediaScanMenuItem -> F
    android.os.Handler currentHandler -> G
    boolean mWritableOnly -> H
    org.openintents.filemanager.IconifiedText[] mDirectoryEntries -> I
    int MESSAGE_SHOW_DIRECTORY_CONTENTS -> MESSAGE_SHOW_DIRECTORY_CONTENTS
    int MESSAGE_SET_PROGRESS -> MESSAGE_SET_PROGRESS
    int MESSAGE_ICON_CHANGED -> MESSAGE_ICON_CHANGED
    java.io.File mHaveShownErrorMessageForFile -> J
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void showDirectoryInput(boolean) -> a
    void refreshDirectoryPanel() -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean isDirectoryInputVisible() -> b
    void upOneLevel() -> c
    void browseTo(java.io.File) -> a
    void openFile(java.io.File) -> b
    void refreshList() -> d
    void addAllElements(java.util.List,java.util.List) -> a
    void checkButtonLayout() -> e
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    void promptDestinationAndMoveFile() -> f
    void promptDestinationAndCopyFile() -> g
    java.io.File createUniqueCopyName(android.content.Context,java.io.File,java.lang.String) -> a
    boolean copy(java.io.File,java.io.File) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(org.openintents.filemanager.FileManagerActivity) -> a
    void access$1(org.openintents.filemanager.FileManagerActivity,android.os.Message) -> a
    void access$2(org.openintents.filemanager.FileManagerActivity) -> b
    boolean access$3(org.openintents.filemanager.FileManagerActivity) -> c
    void access$4(org.openintents.filemanager.FileManagerActivity) -> d
    void access$5(org.openintents.filemanager.FileManagerActivity) -> e
    void access$6(org.openintents.filemanager.FileManagerActivity) -> f
    void access$7(org.openintents.filemanager.FileManagerActivity,java.io.File) -> a
    java.lang.String access$8(org.openintents.filemanager.FileManagerActivity) -> g
    void access$9(org.openintents.filemanager.FileManagerActivity) -> h
    void access$10(org.openintents.filemanager.FileManagerActivity,java.lang.String) -> a
    java.io.File access$11(org.openintents.filemanager.FileManagerActivity) -> i
    void access$12(org.openintents.filemanager.FileManagerActivity,java.io.File) -> b
    void access$13(org.openintents.filemanager.FileManagerActivity,java.io.File,java.lang.String) -> a
    void access$14(org.openintents.filemanager.FileManagerActivity) -> j
org.openintents.filemanager.FileManagerActivity$1 -> org.openintents.filemanager.b:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.openintents.filemanager.FileManagerActivity$10 -> org.openintents.filemanager.c:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.filemanager.FileManagerActivity$11 -> org.openintents.filemanager.d:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    android.widget.EditText val$et -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.openintents.filemanager.FileManagerActivity$12 -> org.openintents.filemanager.e:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.openintents.filemanager.FileManagerActivity$13 -> org.openintents.filemanager.f:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.openintents.filemanager.FileManagerActivity$14 -> org.openintents.filemanager.g:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.openintents.filemanager.FileManagerActivity$15 -> org.openintents.filemanager.h:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    android.widget.EditText val$et2 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.openintents.filemanager.FileManagerActivity$16 -> org.openintents.filemanager.i:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.openintents.filemanager.FileManagerActivity$17 -> org.openintents.filemanager.j:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.openintents.filemanager.FileManagerActivity$18 -> org.openintents.filemanager.k:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.openintents.filemanager.FileManagerActivity$2 -> org.openintents.filemanager.l:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.filemanager.FileManagerActivity$3 -> org.openintents.filemanager.m:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.filemanager.FileManagerActivity$4 -> org.openintents.filemanager.n:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.filemanager.FileManagerActivity$5 -> org.openintents.filemanager.o:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.filemanager.FileManagerActivity$6 -> org.openintents.filemanager.p:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.filemanager.FileManagerActivity$7 -> org.openintents.filemanager.q:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.filemanager.FileManagerActivity$8 -> org.openintents.filemanager.s:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.filemanager.FileManagerActivity$9 -> org.openintents.filemanager.t:
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.openintents.filemanager.FileManagerActivity$RecursiveDeleteTask -> org.openintents.filemanager.u:
    org.openintents.filemanager.FileManagerActivity activity -> b
    java.io.File errorFile -> c
    org.openintents.filemanager.FileManagerActivity this$0 -> a
    int recursiveDelete(java.io.File) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.openintents.filemanager.FileManagerProvider -> org.openintents.filemanager.FileManagerProvider:
    java.lang.String AUTHORITY -> AUTHORITY
    org.openintents.filemanager.util.MimeTypes mMimeTypes -> a
    boolean onCreate() -> onCreate
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
org.openintents.filemanager.ICComparator -> org.openintents.filemanager.v:
    int compare(java.lang.Object,java.lang.Object) -> compare
org.openintents.filemanager.IconifiedText -> org.openintents.filemanager.IconifiedText:
    java.lang.String mText -> a
    java.lang.String mInfo -> b
    android.graphics.drawable.Drawable mIcon -> c
    boolean mSelectable -> d
    boolean mSelected -> e
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isSelectable() -> isSelectable
    void setSelectable(boolean) -> setSelectable
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.lang.String getInfo() -> getInfo
    void setInfo(java.lang.String) -> setInfo
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    int compareTo(org.openintents.filemanager.IconifiedText) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.openintents.filemanager.IconifiedTextListAdapter -> org.openintents.filemanager.IconifiedTextListAdapter:
    android.content.Context mContext -> a
    java.lang.String lastFilter -> b
    org.openintents.filemanager.IconifiedTextListAdapter$IconifiedFilter mFilter -> c
    java.util.List mItems -> d
    java.util.List mOriginalItems -> e
    void addItem(org.openintents.filemanager.IconifiedText) -> addItem
    void setListItems(java.util.List,boolean) -> setListItems
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    boolean areAllItemsSelectable() -> areAllItemsSelectable
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.widget.Filter getFilter() -> getFilter
    void access$0(java.lang.String) -> a
    java.util.List access$1(org.openintents.filemanager.IconifiedTextListAdapter) -> a
    void access$2(org.openintents.filemanager.IconifiedTextListAdapter,java.util.List) -> a
org.openintents.filemanager.IconifiedTextListAdapter$IconifiedFilter -> org.openintents.filemanager.w:
    org.openintents.filemanager.IconifiedTextListAdapter this$0 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
    java.util.List synchronousFilter(java.lang.CharSequence) -> a
org.openintents.filemanager.IconifiedTextView -> org.openintents.filemanager.IconifiedTextView:
    android.widget.TextView mText -> a
    android.widget.TextView mInfo -> b
    android.widget.ImageView mIcon -> c
    void setText(java.lang.String) -> setText
    void setInfo(java.lang.String) -> setInfo
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setTextColor(int) -> setTextColor
    void setInfoColor(int) -> setInfoColor
org.openintents.filemanager.PreferenceActivity -> org.openintents.filemanager.PreferenceActivity:
    java.lang.String PREFS_MEDIASCAN -> PREFS_MEDIASCAN
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean getMediaScanFromPreference(android.content.Context) -> a
org.openintents.filemanager.R -> org.openintents.filemanager.R:
org.openintents.filemanager.R$array -> org.openintents.filemanager.R$array:
    int about_artists -> about_artists
    int about_authors -> about_authors
    int about_documenters -> about_documenters
    int about_translators -> about_translators
    int format_array -> format_array
org.openintents.filemanager.R$attr -> org.openintents.filemanager.R$attr:
org.openintents.filemanager.R$drawable -> org.openintents.filemanager.R$drawable:
    int android_folder -> android_folder
    int folder_bar -> folder_bar
    int ic_folder -> ic_folder
    int ic_launcher -> ic_launcher
    int ic_launcher_folder -> ic_launcher_folder
    int ic_launcher_folder_open -> ic_launcher_folder_open
    int ic_launcher_home -> ic_launcher_home
    int ic_launcher_home_small -> ic_launcher_home_small
    int ic_menu_back_small -> ic_menu_back_small
    int ic_menu_forward_small -> ic_menu_forward_small
    int ic_menu_multiselect -> ic_menu_multiselect
    int icon -> icon
    int icon_file -> icon_file
    int icon_sdcard -> icon_sdcard
    int icon_sdcard_small -> icon_sdcard_small
    int unkown_file -> unkown_file
org.openintents.filemanager.R$id -> org.openintents.filemanager.R$id:
    int TableRow01 -> TableRow01
    int TableRow02 -> TableRow02
    int TableRow03 -> TableRow03
    int TableRow04 -> TableRow04
    int TableRow05 -> TableRow05
    int TableRow06 -> TableRow06
    int TableRow07 -> TableRow07
    int TableRow08 -> TableRow08
    int TableRow09 -> TableRow09
    int TableRow10 -> TableRow10
    int TextView06 -> TextView06
    int TextView08 -> TextView08
    int TextView10 -> TextView10
    int TextView12 -> TextView12
    int TextView14 -> TextView14
    int TextView16 -> TextView16
    int TextView18 -> TextView18
    int TextView20 -> TextView20
    int TextViewAlt -> TextViewAlt
    int TextViewAperture -> TextViewAperture
    int TextViewDate -> TextViewDate
    int TextViewDimensions -> TextViewDimensions
    int TextViewDriveMode -> TextViewDriveMode
    int TextViewExposure -> TextViewExposure
    int TextViewExposureMode -> TextViewExposureMode
    int TextViewExposureProgram -> TextViewExposureProgram
    int TextViewFlash -> TextViewFlash
    int TextViewFocal -> TextViewFocal
    int TextViewIso -> TextViewIso
    int TextViewLat -> TextViewLat
    int TextViewLens -> TextViewLens
    int TextViewLon -> TextViewLon
    int TextViewModel -> TextViewModel
    int TextViewName -> TextViewName
    int TextViewWhite -> TextViewWhite
    int action_multiselect -> action_multiselect
    int action_normal -> action_normal
    int background -> background
    int button1 -> button1
    int button2 -> button2
    int buttonRecent -> buttonRecent
    int buttonRenameAccept -> buttonRenameAccept
    int buttonRenameCancel -> buttonRenameCancel
    int button_copy -> button_copy
    int button_delete -> button_delete
    int button_directory_pick -> button_directory_pick
    int button_move -> button_move
    int button_pick -> button_pick
    int container1 -> container1
    int container2 -> container2
    int directory_buttons -> directory_buttons
    int directory_input -> directory_input
    int directory_text -> directory_text
    int editTextFormat -> editTextFormat
    int empty -> empty
    int empty_text -> empty_text
    int fileView2 -> fileView2
    int filename -> filename
    int filenameView -> filenameView
    int foldername -> foldername
    int foldernametext -> foldernametext
    int frameLayout1 -> frameLayout1
    int gl_root_view -> gl_root_view
    int grid_reset -> grid_reset
    int gridview -> gridview
    int icon -> icon
    int imageButton1 -> imageButton1
    int imageButtonShowMeta -> imageButtonShowMeta
    int image_folder -> image_folder
    int imageview -> imageview
    int info -> info
    int labelDate -> labelDate
    int labelName -> labelName
    int linearLayout1 -> linearLayout1
    int linearLayout2 -> linearLayout2
    int pathlist -> pathlist
    int relativeLayout1 -> relativeLayout1
    int remove_images -> remove_images
    int rename -> rename
    int scan_progress -> scan_progress
    int space -> space
    int spinner1 -> spinner1
    int tableLayout1 -> tableLayout1
    int text -> text
    int text1 -> text1
    int text2 -> text2
    int transparent_panel -> transparent_panel
    int usb_test -> usb_test
    int view_delete -> view_delete
    int view_edit -> view_edit
    int view_file -> view_file
    int view_help -> view_help
    int view_save -> view_save
    int view_tag -> view_tag
    int view_wallpaper -> view_wallpaper
    int webImageView -> webImageView
org.openintents.filemanager.R$integer -> org.openintents.filemanager.R$integer:
    int thumbSize -> thumbSize
org.openintents.filemanager.R$layout -> org.openintents.filemanager.R$layout:
    int dialog_new_folder -> dialog_new_folder
    int filelist -> filelist
    int filelist_item -> filelist_item
    int fileview -> fileview
    int format_name -> format_name
    int fullimage -> fullimage
    int gridview -> gridview
    int main -> main
    int oi_distribution_eula -> oi_distribution_eula
    int oi_distribution_infoactivity -> oi_distribution_infoactivity
    int photo -> photo
org.openintents.filemanager.R$menu -> org.openintents.filemanager.R$menu:
    int folder_menu -> folder_menu
    int gallery -> gallery
    int grid_menu -> grid_menu
    int view_menu -> view_menu
org.openintents.filemanager.R$raw -> org.openintents.filemanager.R$raw:
    int license_short -> license_short
    int recent_changes -> recent_changes
org.openintents.filemanager.R$string -> org.openintents.filemanager.R$string:
    int DecodeAll -> DecodeAll
    int MostRecent -> MostRecent
    int about_comments -> about_comments
    int about_copyright -> about_copyright
    int about_email -> about_email
    int about_translators -> about_translators
    int about_website_url -> about_website_url
    int accept -> accept
    int app_name -> app_name
    int application_not_available -> application_not_available
    int bad_folder -> bad_folder
    int bad_source -> bad_source
    int button_Recent -> button_Recent
    int cancel -> cancel
    int copied_file_name -> copied_file_name
    int copied_file_name_2 -> copied_file_name_2
    int copy_button -> copy_button
    int copy_button_multiselect -> copy_button_multiselect
    int copy_title -> copy_title
    int create_new_folder -> create_new_folder
    int delete_button_multiselect -> delete_button_multiselect
    int deleting_files -> deleting_files
    int edit -> edit
    int error_copying_file -> error_copying_file
    int error_creating_new_folder -> error_creating_new_folder
    int error_deleting_child_file -> error_deleting_child_file
    int error_deleting_file -> error_deleting_file
    int error_deleting_folder -> error_deleting_folder
    int error_file_does_not_exists -> error_file_does_not_exists
    int error_generic -> error_generic
    int error_media_scan -> error_media_scan
    int error_moving_file -> error_moving_file
    int error_moving_folder -> error_moving_folder
    int error_renaming_file -> error_renaming_file
    int error_renaming_folder -> error_renaming_folder
    int error_selection -> error_selection
    int file -> file
    int file_copied -> file_copied
    int file_deleted -> file_deleted
    int file_moved -> file_moved
    int file_name -> file_name
    int file_renamed -> file_renamed
    int folder_deleted -> folder_deleted
    int folder_moved -> folder_moved
    int folder_name -> folder_name
    int folder_renamed -> folder_renamed
    int format_prompt -> format_prompt
    int grid_reset -> grid_reset
    int hello -> hello
    int help -> help
    int image_folder -> image_folder
    int media_scan_excluded -> media_scan_excluded
    int media_scan_included -> media_scan_included
    int menu_copy -> menu_copy
    int menu_delete -> menu_delete
    int menu_exclude_from_media_scan -> menu_exclude_from_media_scan
    int menu_exit -> menu_exit
    int menu_include_in_media_scan -> menu_include_in_media_scan
    int menu_move -> menu_move
    int menu_multi_select -> menu_multi_select
    int menu_new_folder -> menu_new_folder
    int menu_open -> menu_open
    int menu_rename -> menu_rename
    int menu_send -> menu_send
    int move_button -> move_button
    int move_button_multiselect -> move_button_multiselect
    int move_title -> move_title
    int multiselect_title -> multiselect_title
    int no_filemanager_installed -> no_filemanager_installed
    int oi_distribution_about -> oi_distribution_about
    int oi_distribution_aboutapp -> oi_distribution_aboutapp
    int oi_distribution_aboutapp_get -> oi_distribution_aboutapp_get
    int oi_distribution_aboutapp_not_available -> oi_distribution_aboutapp_not_available
    int oi_distribution_aboutapp_package -> oi_distribution_aboutapp_package
    int oi_distribution_aboutapp_website -> oi_distribution_aboutapp_website
    int oi_distribution_app_name -> oi_distribution_app_name
    int oi_distribution_download_market -> oi_distribution_download_market
    int oi_distribution_download_market_message -> oi_distribution_download_market_message
    int oi_distribution_download_message -> oi_distribution_download_message
    int oi_distribution_download_title -> oi_distribution_download_title
    int oi_distribution_download_web -> oi_distribution_download_web
    int oi_distribution_eula_accept -> oi_distribution_eula_accept
    int oi_distribution_eula_message -> oi_distribution_eula_message
    int oi_distribution_eula_refuse -> oi_distribution_eula_refuse
    int oi_distribution_eula_title -> oi_distribution_eula_title
    int oi_distribution_filemanager -> oi_distribution_filemanager
    int oi_distribution_filemanager_not_available -> oi_distribution_filemanager_not_available
    int oi_distribution_filemanager_package -> oi_distribution_filemanager_package
    int oi_distribution_filemanager_website -> oi_distribution_filemanager_website
    int oi_distribution_info_activity_text -> oi_distribution_info_activity_text
    int oi_distribution_info_instructions -> oi_distribution_info_instructions
    int oi_distribution_info_launch -> oi_distribution_info_launch
    int oi_distribution_info_not_available -> oi_distribution_info_not_available
    int oi_distribution_launch_error -> oi_distribution_launch_error
    int oi_distribution_menu_update -> oi_distribution_menu_update
    int oi_distribution_name_and_version -> oi_distribution_name_and_version
    int oi_distribution_newversion_continue -> oi_distribution_newversion_continue
    int oi_distribution_newversion_message -> oi_distribution_newversion_message
    int oi_distribution_newversion_recent_changes -> oi_distribution_newversion_recent_changes
    int oi_distribution_safe -> oi_distribution_safe
    int oi_distribution_safe_not_available -> oi_distribution_safe_not_available
    int oi_distribution_safe_not_available_decrypt -> oi_distribution_safe_not_available_decrypt
    int oi_distribution_safe_package -> oi_distribution_safe_package
    int oi_distribution_safe_website -> oi_distribution_safe_website
    int oi_distribution_update_app -> oi_distribution_update_app
    int oi_distribution_update_box_text -> oi_distribution_update_box_text
    int oi_distribution_update_check_now -> oi_distribution_update_check_now
    int oi_distribution_update_checker_package -> oi_distribution_update_checker_package
    int oi_distribution_update_checker_website -> oi_distribution_update_checker_website
    int oi_distribution_update_error -> oi_distribution_update_error
    int oi_distribution_update_get_updater -> oi_distribution_update_get_updater
    int preference_advanced_features -> preference_advanced_features
    int preference_mediascan_summary_off -> preference_mediascan_summary_off
    int preference_mediascan_summary_on -> preference_mediascan_summary_on
    int preference_mediascan_title -> preference_mediascan_title
    int really_delete -> really_delete
    int really_delete_multiselect -> really_delete_multiselect
    int rename -> rename
    int rename1 -> rename1
    int rename2 -> rename2
    int rename3 -> rename3
    int save_as -> save_as
    int save_button -> save_button
    int save_fail -> save_fail
    int save_success -> save_success
    int save_title -> save_title
    int send_not_available -> send_not_available
    int settings -> settings
    int this_folder_is_empty -> this_folder_is_empty
    int view_crop -> view_crop
    int view_decode -> view_decode
    int view_delete -> view_delete
    int view_help -> view_help
    int view_save -> view_save
    int view_tag -> view_tag
    int wallpaper -> wallpaper
org.openintents.filemanager.R$xml -> org.openintents.filemanager.R$xml:
    int device_filter -> device_filter
    int mimetypes -> mimetypes
    int preferences -> preferences
org.openintents.filemanager.ThumbnailLoader -> org.openintents.filemanager.ThumbnailLoader:
    java.util.List listFile -> a
    boolean cancel -> b
    java.io.File file -> c
    android.os.Handler handler -> d
    android.content.Context context -> e
    org.openintents.filemanager.util.MimeTypes mMimeTypes -> f
    int thumbnailWidth -> g
    int thumbnailHeight -> h
    void setThumbnailHeight(int) -> setThumbnailHeight
    void run() -> run
org.openintents.filemanager.compatibility.BitmapDrawable_Compatible -> org.openintents.filemanager.compatibility.BitmapDrawable_Compatible:
    boolean use_SDK_1_6 -> a
    android.graphics.drawable.BitmapDrawable getNewBitmapDrawable(android.content.res.Resources,android.graphics.Bitmap) -> getNewBitmapDrawable
org.openintents.filemanager.compatibility.BitmapDrawable_SDK_1_6 -> org.openintents.filemanager.compatibility.BitmapDrawable_SDK_1_6:
    android.graphics.drawable.BitmapDrawable getNewBitmapDrawable(android.content.res.Resources,android.graphics.Bitmap) -> getNewBitmapDrawable
org.openintents.filemanager.util.FileUtils -> org.openintents.filemanager.util.FileUtils:
    boolean isLocal(java.lang.String) -> isLocal
    java.lang.String getExtension(java.lang.String) -> getExtension
    boolean isMediaUri(java.lang.String) -> isMediaUri
    android.net.Uri getUri(java.io.File) -> getUri
    java.io.File getFile(android.net.Uri) -> getFile
    java.io.File getPathWithoutFilename(java.io.File) -> getPathWithoutFilename
    java.io.File getFile(java.lang.String,java.lang.String) -> getFile
    java.io.File getFile(java.io.File,java.lang.String) -> getFile
org.openintents.filemanager.util.MimeTypeParser -> org.openintents.filemanager.util.MimeTypeParser:
    java.lang.String TAG_MIMETYPES -> TAG_MIMETYPES
    java.lang.String TAG_TYPE -> TAG_TYPE
    java.lang.String ATTR_EXTENSION -> ATTR_EXTENSION
    java.lang.String ATTR_MIMETYPE -> ATTR_MIMETYPE
    org.xmlpull.v1.XmlPullParser mXpp -> a
    org.openintents.filemanager.util.MimeTypes mMimeTypes -> b
    org.openintents.filemanager.util.MimeTypes fromXml(java.io.InputStream) -> fromXml
    org.openintents.filemanager.util.MimeTypes fromXmlResource(android.content.res.XmlResourceParser) -> fromXmlResource
    org.openintents.filemanager.util.MimeTypes parse() -> parse
org.openintents.filemanager.util.MimeTypes -> org.openintents.filemanager.util.MimeTypes:
    java.util.Map mMimeTypes -> a
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String getMimeType(java.lang.String) -> getMimeType
org.openintents.intents.AboutMiniIntents -> org.openintents.intents.AboutMiniIntents:
    java.lang.String ACTION_SHOW_ABOUT_DIALOG -> ACTION_SHOW_ABOUT_DIALOG
    java.lang.String EXTRA_PACKAGE_NAME -> EXTRA_PACKAGE_NAME
org.openintents.intents.FileManagerIntents -> org.openintents.intents.FileManagerIntents:
    java.lang.String ACTION_PICK_FILE -> ACTION_PICK_FILE
    java.lang.String ACTION_PICK_DIRECTORY -> ACTION_PICK_DIRECTORY
    java.lang.String ACTION_MULTI_SELECT -> ACTION_MULTI_SELECT
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_BUTTON_TEXT -> EXTRA_BUTTON_TEXT
    java.lang.String EXTRA_WRITEABLE_ONLY -> EXTRA_WRITEABLE_ONLY
org.openintents.util.IntentUtils -> org.openintents.util.IntentUtils:
    boolean isIntentAvailable(android.content.Context,android.content.Intent) -> isIntentAvailable
org.openintents.util.MenuIntentOptionsWithIcons -> org.openintents.util.MenuIntentOptionsWithIcons:
    android.content.Context mContext -> a
    android.view.Menu mMenu -> b
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
org.openintents.util.VersionUtils -> org.openintents.util.VersionUtils:
    int getVersionCode(android.content.Context) -> getVersionCode
    java.lang.String getVersionNumber(android.content.Context) -> getVersionNumber
    java.lang.String getApplicationName(android.content.Context) -> getApplicationName
    int getApplicationIcon(android.content.Context) -> getApplicationIcon
    boolean isPackageAvailable(android.content.Context,java.lang.String,int) -> isPackageAvailable
